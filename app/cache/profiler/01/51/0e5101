a:8:{s:5:"token";s:6:"0e5101";s:6:"parent";N;s:8:"children";a:0:{}s:4:"data";a:12:{s:6:"config";C:62:"Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector":473:{a:17:{s:8:"app_name";N;s:11:"app_version";N;s:5:"token";s:6:"0e5101";s:15:"symfony_version";s:6:"2.8.38";s:13:"symfony_state";s:7:"unknown";s:4:"name";s:3:"n/a";s:3:"env";s:3:"n/a";s:5:"debug";s:3:"n/a";s:11:"php_version";s:23:"7.0.30-0ubuntu0.16.04.1";s:14:"xdebug_enabled";b:0;s:14:"eaccel_enabled";b:0;s:11:"apc_enabled";b:0;s:14:"xcache_enabled";b:0;s:16:"wincache_enabled";b:0;s:20:"zend_opcache_enabled";b:1;s:7:"bundles";a:0:{}s:9:"sapi_name";s:14:"apache2handler";}}s:7:"request";C:63:"Symfony\Component\HttpKernel\DataCollector\RequestDataCollector":34988:{a:18:{s:6:"format";s:4:"html";s:7:"content";s:15474:"file_edit%5B_token%5D=r5FdfdaX5fYA-6EVQ1LsmgOCousmiPFgqy6UV2oUWpk&file_edit%5Bcontents%5D=%23+This+file+defines+the+contenttypes+on+the+website.+See+the+documentation+for%0D%0A%23+details%3A+https%3A%2F%2Fdocs.bolt.cm%2Fcontenttypes%2Fintro%0D%0A%0D%0A%23+The+Homepage+contenttype+is+a+singleton%3A+There+can+be+only+one+record+of+this%0D%0A%23+contenttype.%0D%0A%0D%0Ahomepage%3A%0D%0A++++name%3A+Homepage%0D%0A++++singular_name%3A+Homepage%0D%0A++++fields%3A%0D%0A++++++++title%3A%0D%0A++++++++++++type%3A+text%0D%0A++++++++++++class%3A+large%0D%0A++++++++++++group%3A+content%0D%0A++++++++++++postfix%3A+%7C%0D%0A++++++++++++++++The+'Homepage'+can+contain+basic+information+about+the+website.+This+title+will+be%0D%0A++++++++++++++++shown+on+the+homepage+of+the+website%2C+as+the+name+implies.+To+change+the%0D%0A++++++++++++++++%3Cem%3E%3Cstrong%3Ename%3C%2Fstrong%3E%3C%2Fem%3E+of+the+site%2C+as+is+shown+in+the+header%2C+and+the+tab%0D%0A++++++++++++++++in+the+webbrowser%2C+edit+%3Ccode%3Esitename%3A%3C%2Fcode%3E+in+the+configuration+file.%0D%0A++++++++image%3A%0D%0A++++++++++++type%3A+image%0D%0A++++++++++++placeholder%3A+https%3A%2F%2Fsource.unsplash.com%2F1920x640%2F%3Fcityscape%2Clandscape%2Cnature%2F__random__%0D%0A++++++++teaser%3A%0D%0A++++++++++++type%3A+html%0D%0A++++++++++++height%3A+150px%0D%0A++++++++content%3A%0D%0A++++++++++++type%3A+html%0D%0A++++++++++++height%3A+300px%0D%0A++++++++contentlink%3A%0D%0A++++++++++++type%3A+text%0D%0A++++++++++++label%3A+Link%0D%0A++++++++++++placeholder%3A+'contenttype%2Fslug+or+http%3A%2F%2Fexample.org%2F'%0D%0A++++++++++++postfix%3A+%22Use+this+to+add+a+link+for+this+Homepage.+This+could+either+be+an+'internal'+link+like+%3Ctt%3Epage%2F%2Fabout%3C%2Ftt%3E%2C+if+you+use+a+contenttype%2Fslug+combination.+Otherwise+use+a+proper+URL%2C+like+%60http%3A%2F%2Fexample.org%60.%22%0D%0A++++++++slug%3A%0D%0A++++++++++++type%3A+slug%0D%0A++++++++++++uses%3A+title%0D%0A++++++++++++group%3A+meta%0D%0A++++viewless%3A+true%0D%0A++++singleton%3A+true%0D%0A++++default_status%3A+published%0D%0A++++icon_many%3A+%22fa%3Ahome%22%0D%0A++++icon_one%3A+%22fa%3Ahome%22%0D%0A%0D%0A%0D%0A%23+Pages+can+be+used+for+the+more+'static'+pages+on+your+site.+This+content-type%0D%0A%23+has+a+'templateselect'+field%2C+which+allows+you+to+override+the+record_template%0D%0A%23+setting+for+an+individual+page.%0D%0A%23+The+taxonomy+for+this+ContentType+is+defined+as+'groups'%2C+which+is+a+so-called%0D%0A%23+%22grouping+taxonomy%22.+This+way+you+can+easily+group+sets+of+pages+that+logically%0D%0A%23+belong+together.+If+your+site+has+a+'services'+section%2C+in+which+you'd+like+to%0D%0A%23+list+the+different+types+of+services+a+company+provides%2C+you+can+group+these%0D%0A%23+together.%0D%0A%0D%0Apages%3A%0D%0A++++name%3A+Pages%0D%0A++++singular_name%3A+Page%0D%0A++++fields%3A%0D%0A++++++++title%3A%0D%0A++++++++++++type%3A+text%0D%0A++++++++++++class%3A+large%0D%0A++++++++++++group%3A+content%0D%0A++++++++slug%3A%0D%0A++++++++++++type%3A+slug%0D%0A++++++++++++uses%3A+title%0D%0A++++++++image%3A%0D%0A++++++++++++type%3A+image%0D%0A++++++++++++placeholder%3A+https%3A%2F%2Fsource.unsplash.com%2F1280x768%2F%3Fbusiness%2Cworkplace%2F__random__%0D%0A++++++++teaser%3A%0D%0A++++++++++++type%3A+html%0D%0A++++++++++++height%3A+150px%0D%0A++++++++body%3A%0D%0A++++++++++++type%3A+html%0D%0A++++++++++++height%3A+300px%0D%0A++++++++template%3A%0D%0A++++++++++++type%3A+templateselect%0D%0A++++++++++++filter%3A+'*.twig'%0D%0A++++default_status%3A+published%0D%0A++++taxonomy%3A+%5B+groups+%5D%0D%0A++++recordsperpage%3A+20%0D%0A%0D%0A%0D%0A%23+Entries+can+be+used+for+things+like+'news'+or+'blogpostings'.+They+have+a%0D%0A%23+'teaser'%2C+which+can+be+used+for+a+short+blurb+on+listing-pages%2C+allowing%0D%0A%23+visitors+to+click-through+to+the+rest+of+the+entry.+It+also+has+fields+for+an%0D%0A%23+image+and+an+optional+video.%0D%0A%23+A+relation+is+defined+to+the+pages+ContentType.+This+way+you+can+refer+to+a%0D%0A%23+page+from+your+news-item.%0D%0A%23+This+ContentType+defines+'categories'+and+'tags'+as+taxonomies%2C+allowing+the%0D%0A%23+editor+to+use+both+to+categorize+a+specific+entry.%0D%0A%23+The+'sort'+is+set+to+'-datepublish'%2C+which+means+that+newer+entries+will+be%0D%0A%23+shown+above+older+entries.%0D%0A%0D%0Aentries%3A%0D%0A++++name%3A+Entries%0D%0A++++singular_name%3A+Entry%0D%0A++++fields%3A%0D%0A++++++++title%3A%0D%0A++++++++++++type%3A+text%0D%0A++++++++++++class%3A+large%0D%0A++++++++++++group%3A+content%0D%0A++++++++slug%3A%0D%0A++++++++++++type%3A+slug%0D%0A++++++++++++uses%3A+title%0D%0A++++++++teaser%3A%0D%0A++++++++++++type%3A+html%0D%0A++++++++++++height%3A+150px%0D%0A++++++++body%3A%0D%0A++++++++++++type%3A+html%0D%0A++++++++++++height%3A+300px%0D%0A++++++++image%3A%0D%0A++++++++++++type%3A+image%0D%0A++++++++++++group%3A+media%0D%0A++++++++++++placeholder%3A+https%3A%2F%2Fsource.unsplash.com%2F1280x768%2F%3Fbusiness%2Cworkspace%2Cinterior%2F__random__%0D%0A++++++++video%3A%0D%0A++++++++++++type%3A+video%0D%0A++++relations%3A%0D%0A++++++++pages%3A%0D%0A++++++++++multiple%3A+false%0D%0A++++++++++order%3A+title%0D%0A++++++++++label%3A+Select+a+page%0D%0A++++taxonomy%3A+%5B+categories%2C+tags+%5D%0D%0A++++record_template%3A+entry.twig%0D%0A++++listing_template%3A+listing.twig%0D%0A++++listing_records%3A+10%0D%0A++++default_status%3A+published%0D%0A++++sort%3A+-datepublish%0D%0A++++recordsperpage%3A+20%0D%0A%0D%0A%0D%0A%23+The+'Showcases'+is+not+particularly+useful+in+most+cases%2C+but+it+does+a+good%0D%0A%23+job+of+showcasing+most+of+the+available+fieldtypes.+Feel+free+to+delete+it%2C+or%0D%0A%23+copy+some+fields+to+your+own+ContentTypes.%0D%0A%23+Since+no+templates+are+defined+for+this+ContentType%2C+the+default+record_template%2C%0D%0A%23+listing_template%2C+and+related+settings+are+used+from+config.yml%0D%0A%0D%0Ashowcases%3A%0D%0A++++name%3A+Showcases%0D%0A++++slug%3A+showcases%0D%0A++++singular_name%3A+Showcase%0D%0A++++singular_slug%3A+showcase%0D%0A++++fields%3A%0D%0A++++++++title%3A%0D%0A++++++++++++type%3A+text%0D%0A++++++++++++class%3A+large%0D%0A++++++++++++required%3A+true%0D%0A++++++++++++pattern%3A+%22.%7B2%2C255%7D%22+%23+see%3A+http%3A%2F%2Fhtml5pattern.com%2F%0D%0A++++++++++++error%3A+%22The+Title+field+is+required%2C+and+must+contain+at+least+2+characters%22%0D%0A++++++++++++group%3A+Text%0D%0A++++++++slug%3A%0D%0A++++++++++++type%3A+slug%0D%0A++++++++++++uses%3A+%5B+title+%5D%0D%0A++++++++html%3A%0D%0A++++++++++++type%3A+html%0D%0A++++++++++++height%3A+150px%0D%0A++++++++textarea%3A%0D%0A++++++++++++type%3A+textarea%0D%0A++++++++++++postfix%3A+%22%3Cp%3E%3Cem%3EThis+is+a+plain+text+area.+the+contents+will+not+be+processed.%3C%2Fem%3E%3C%2Fp%3E%22%0D%0A++++++++markdown%3A%0D%0A++++++++++++type%3A+markdown%0D%0A++++++++++++postfix%3A+%22%3Cp%3E%3Cem%3EThis+field+gets+parsed+as+%3Ca+href%3D'https%3A%2F%2Fhelp.github.com%2Farticles%2Fmarkdown-basics'%3EMarkdown%3C%2Fa%3E%2C+when+rendered+on+the+site.%3C%2Fem%3E%3C%2Fp%3E%22%0D%0A++++++++geolocation%3A%0D%0A++++++++++++type%3A+geolocation%0D%0A++++++++++++group%3A+Media%0D%0A++++++++embed%3A%0D%0A++++++++++++type%3A+embed%0D%0A++++++++video%3A%0D%0A++++++++++++type%3A+video%0D%0A++++++++image%3A%0D%0A++++++++++++type%3A+image%0D%0A++++++++++++attrib%3A+title+%23+Note%3A+retrieve+this+in+your+template+with+%7B%7B+record.values.image.title+%7D%7D%0D%0A++++++++++++extensions%3A+%5B+gif%2C+jpg%2C+png+%5D%0D%0A++++++++++++placeholder%3A+https%3A%2F%2Fsource.unsplash.com%2F1280x768%2F%3Fanimal%2Ckoala%2Ckitten%2Cpuppy%2Ccute%2F__random__%0D%0A++++++++imagelist%3A%0D%0A++++++++++++type%3A+imagelist%0D%0A++++++++file%3A%0D%0A++++++++++++type%3A+file%0D%0A++++++++++++group%3A+files%0D%0A++++++++filelist%3A%0D%0A++++++++++++type%3A+filelist%0D%0A++++++++checkbox%3A%0D%0A++++++++++++type%3A+checkbox%0D%0A++++++++++++label%3A+%22This+is+a+checkbox%22%0D%0A++++++++++++group%3A+other%0D%0A++++++++datetime%3A%0D%0A++++++++++++type%3A+datetime%0D%0A++++++++++++default%3A+%222000-01-01%22%0D%0A++++++++++++variant%3A+inline%0D%0A++++++++date%3A%0D%0A++++++++++++type%3A+date%0D%0A++++++++++++default%3A+%22first+day+of+last+month%22%0D%0A++++++++++++variant%3A+inline%0D%0A++++++++integerfield%3A%0D%0A++++++++++++type%3A+integer%0D%0A++++++++++++index%3A+true%0D%0A++++++++floatfield%3A%0D%0A++++++++++++type%3A+float%0D%0A++++++++selectfield%3A%0D%0A++++++++++++type%3A+select%0D%0A++++++++++++values%3A+%5B+foo%2C+bar%2C+baz+%5D%0D%0A++++++++multiselect%3A%0D%0A++++++++++++type%3A+select%0D%0A++++++++++++values%3A+%5B+A-tuin%2C+Donatello%2C+Rafael%2C+Leonardo%2C+Michelangelo%2C+Koopa%2C+Squirtle+%5D%0D%0A++++++++++++multiple%3A+true%0D%0A++++++++++++postfix%3A+%22Select+your+favourite+turtle(s).%22%0D%0A++++++++selectentry%3A%0D%0A++++++++++++type%3A+select%0D%0A++++++++++++values%3A+entries%2Fid%2Ctitle%0D%0A++++++++++++postfix%3A+%22Select+an+entry%22%0D%0A++++++++++++autocomplete%3A+true%0D%0A++++++++++++sort%3A+title%0D%0A++++++++repeater%3A%0D%0A++++++++++++type%3A+repeater%0D%0A++++++++++++group%3A+repeater%0D%0A++++++++++++limit%3A+3%0D%0A++++++++++++prefix%3A+%22%3Cp%3EThis+allows+you+to+create+multiple+sets+of+fields.+Use+the+add+button+at+the+bottom+to+create+a+new+empty+set.%3C%2Fp%3E%22%0D%0A++++++++++++fields%3A%0D%0A++++++++++++++++repeattitle%3A%0D%0A++++++++++++++++++++type%3A+text%0D%0A++++++++++++++++repeatimage%3A%0D%0A++++++++++++++++++++type%3A+image%0D%0A++++++++++++++++++++extensions%3A+%5B+gif%2C+jpg%2C+png+%5D%0D%0A++++++++++++++++repeatcontent%3A%0D%0A++++++++++++++++++++type%3A+html%0D%0A++++relations%3A%0D%0A++++++++entries%3A%0D%0A++++++++++++multiple%3A+false%0D%0A++++++++++++label%3A+%22Choose+an+entry%22%0D%0A++++++++++++order%3A+-id%0D%0A++++++++++++format%3A+%22%7B%7B+item.title%7Cescape+%7D%7D+(%E2%84%96+%7B%7B+item.id+%7D%7D)%22%0D%0A++++++++++++postfix%3A+%22By+selecting+an+Entry%2C+you're+creating+a+bi-directional+relationship+to+that+Entry.%22%0D%0A++++++++pages%3A%0D%0A++++++++++++multiple%3A+true%0D%0A++++++++++++order%3A+title%0D%0A++++++++++++label%3A+Select+zero+or+more+pages%0D%0A++++taxonomy%3A+%5B+categories%2C+tags+%5D%0D%0A++++show_on_dashboard%3A+true%0D%0A++++default_status%3A+published%0D%0A++++searchable%3A+true%0D%0A++++icon_many%3A+%22fa%3Agift%22%0D%0A++++icon_one%3A+%22fa%3Agift%22%0D%0A%0D%0A%0D%0A%23+The+'Blocks'+ContentType+is+a+so-called+'resource+ContentType'.+This+means%0D%0A%23+that+it+can+be+used+to+manage+smaller+pieces+of+content%2C+like+the+'about+us'%0D%0A%23+text%2C+an+'our+address'+in+the+footer%2C+or+similar+short+blurbs+of+text.%0D%0A%23+For+more+info%2C+see%3A+https%3A%2F%2Fdocs.bolt.cm%2Fhowto%2Fresource-contenttype%0D%0A%0D%0Ablocks%3A%0D%0A++++name%3A+Blocks%0D%0A++++singular_name%3A+Block%0D%0A++++fields%3A%0D%0A++++++++title%3A%0D%0A++++++++++++type%3A+text%0D%0A++++++++++++class%3A+large%0D%0A++++++++++++group%3A+%22Block%22%0D%0A++++++++slug%3A%0D%0A++++++++++++type%3A+slug%0D%0A++++++++++++uses%3A+%5B+title+%5D%0D%0A++++++++content%3A%0D%0A++++++++++++type%3A+html%0D%0A++++++++++++height%3A+150px%0D%0A++++++++contentlink%3A%0D%0A++++++++++++type%3A+text%0D%0A++++++++++++label%3A+Link%0D%0A++++++++++++placeholder%3A+'contenttype%2Fslug+or+http%3A%2F%2Fexample.org%2F'%0D%0A++++++++++++postfix%3A+%22Use+this+to+add+a+link+for+this+Block.+This+could+either+be+an+'internal'+link+like+%3Ctt%3Epage%2Fabout%3C%2Ftt%3E%2C+if+you+use+a+contenttype%2Fslug+combination.+Otherwise+use+a+proper+URL%2C+like+%60http%3A%2F%2Fexample.org%60.%22%0D%0A++++++++image%3A%0D%0A++++++++++++type%3A+image%0D%0A++++++++++++attrib%3A+title%0D%0A++++++++++++extensions%3A+%5B+gif%2C+jpg%2C+png+%5D%0D%0A++++show_on_dashboard%3A+true%0D%0A++++viewless%3A+true%0D%0A++++default_status%3A+published%0D%0A++++searchable%3A+false%0D%0A++++icon_many%3A+%22fa%3Acubes%22%0D%0A++++icon_one%3A+%22fa%3Acube%22%0D%0A%0D%0A%23+Possible+field+types%3A%0D%0A%23%0D%0A%23+text+-+varchar(256)+-+input+type+text.%0D%0A%23+integer+-+integer+-+Input+field+for+integer+numbers.%0D%0A%23+float+-+double+-+Input+field+for+floating+numbers%2C+stored+as+'Double'.%0D%0A%23+geolocation+-+text+(65kb)+-+Input+field+for+geolocation.+Enter+an+address%2C+and+the+location+is+geocoded+to+latitude%2Flongitude+coordinates%0D%0A%23+imagelist+-+text+(65kb)+-+Input+type+for+imagelists.+Add+multiple+images+with+a+description.+Useful+for+image+sliders%2C+galleries%2C+etcetera.%0D%0A%23+image+-+varchar(256)+-+image+select%2Fupload+widget%2C+stored+as+filename.%0D%0A%23+file+-+varchar(256)+-+file+select%2Fupload+widget%2C+stored+as+filename.%0D%0A%23+filelist+-+text+(65kb)+-+Input+type+for+a+list+of+files.+Including+a+description.%0D%0A%23+video+-+varchar(256)+-+Video+embed+widget%2C+stored+as+filename.%0D%0A%23+html+-+text+(65kb)+-+wysiwyg+element.%0D%0A%23+textarea+-+varchar(32768)+-+Simple%2C+plain+%3C+textarea+%3E+field.%0D%0A%23+markdown+-+varchar(32768)+-+Simple%2C+plain+%3C+textarea+%3E+field%2C+which+is+parsed+as+Markdown+text.%0D%0A%23+datetime+-+datetime+-+date+and+time+selector+widget.%0D%0A%23+date+-+datetime+-+date+selector+widget.%0D%0A%23+select+-+varchar(256)+-+select+with+predefined+values%0D%0A%23+templateselect+-+varchar(256)+-+select+with+template+filenames%0D%0A%23+checkbox+-+integer+-+checkbox-field+which+is+1+(checked)+or+0+(unchecked)%0D%0A%0D%0A%23+Using+YAML+repeated+nodes%0D%0A%23%0D%0A%23+YAML+allows+the+defining+of+%22repeated+nodes%22.+These+allow+you+to+define+a+'node'%0D%0A%23+with+a+'key%3A+%26name'+and+referenced+later+with+'%3C%3C%3A+*name'%0D%0A%23%0D%0A%23+Bolt+allows+you+to+define+this+with+the+special+entry+of+'__nodes%3A'+that+itself%0D%0A%23+won't+create+a+ContentType%2C+but+will+allow+you+to+use+it+in+actual+ContentTypes%0D%0A%23+to+prevent+repeating+yourself.%0D%0A%23%0D%0A%23+To+achieve+this%2C+first+create+a+key+'__nodes%3A'%0D%0A%23__nodes%3A%0D%0A%23++++field_defaults%3A+%26field_defaults%0D%0A%23++++++++title%3A%0D%0A%23++++++++++++type%3A+text%0D%0A%23++++++++++++class%3A+large%0D%0A%23++++++++++++group%3A+main%0D%0A%23++++++++slug%3A%0D%0A%23++++++++++++type%3A+slug%0D%0A%23++++++++++++uses%3A+title%0D%0A%23++++template_defaults%3A+%26template_defaults%0D%0A%23++++++++template%3A%0D%0A%23++++++++++++type%3A+templateselect%0D%0A%23++++++++++++filter%3A+'*.twig'%0D%0A%23++++++++++++group%3A+meta%0D%0A%23%0D%0A%23+Then%2C+as+an+example%2C+you+could+create+a+ContentType+with+default+fields%2C+with%0D%0A%23+an+additional+'image'+field.%0D%0A%23%0D%0A%23contenttype_abc%3A%0D%0A%23++++name%3A+ContentType+Abc%0D%0A%23++++fields%3A%0D%0A%23++++++++%3C%3C%3A+*field_defaults%0D%0A%23++++++++image%3A%0D%0A%23++++++++++++type%3A+image%0D%0A%23++++++++++++attrib%3A+title%0D%0A%23++++++++++++extensions%3A+%5B+gif%2C+jpg%2C+png+%5D%0D%0A%23++++++++%3C%3C%3A+*template_defaults%0D%0A%23++++taxonomy%3A+%5B+chapters+%5D%0D%0A%23++++recordsperpage%3A+10%0D%0A%23%0D%0A%23+Alternatively%2C+or+additionally%2C+you+then+can+then+create+a+ContentType+with%0D%0A%23+default+fields%2C+and+a+'select'+field%2C+and+a+different+'templateselect'+option.%0D%0A%23%0D%0A%23contenttype_xyz%3A%0D%0A%23++++name%3A+ContentType+Xyz%0D%0A%23++++fields%3A%0D%0A%23++++++++%3C%3C%3A+*field_defaults%0D%0A%23++++++++selectfield%3A%0D%0A%23++++++++++++type%3A+select%0D%0A%23++++++++++++values%3A+%5B+none%2C+foo%2C+bar+%5D%0D%0A%23++++++++template%3A%0D%0A%23++++++++++++type%3A+templateselect%0D%0A%23++++++++++++filter%3A+'*_xyz.twig'%0D%0A%23++++taxonomy%3A+%5B+tags+%5D%0D%0A%23++++recordsperpage%3A+20%0D%0A&file_edit%5Bsave%5D=undefined";s:12:"content_type";s:16:"application/json";s:11:"status_text";s:2:"OK";s:11:"status_code";i:200;s:13:"request_query";a:1:{s:8:"returnto";s:4:"ajax";}s:15:"request_request";a:1:{s:9:"file_edit";a:3:{s:6:"_token";s:43:"r5FdfdaX5fYA-6EVQ1LsmgOCousmiPFgqy6UV2oUWpk";s:8:"contents";s:12530:"# This file defines the contenttypes on the website. See the documentation for
# details: https://docs.bolt.cm/contenttypes/intro

# The Homepage contenttype is a singleton: There can be only one record of this
# contenttype.

homepage:
    name: Homepage
    singular_name: Homepage
    fields:
        title:
            type: text
            class: large
            group: content
            postfix: |
                The 'Homepage' can contain basic information about the website. This title will be
                shown on the homepage of the website, as the name implies. To change the
                <em><strong>name</strong></em> of the site, as is shown in the header, and the tab
                in the webbrowser, edit <code>sitename:</code> in the configuration file.
        image:
            type: image
            placeholder: https://source.unsplash.com/1920x640/?cityscape,landscape,nature/__random__
        teaser:
            type: html
            height: 150px
        content:
            type: html
            height: 300px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Homepage. This could either be an 'internal' link like <tt>page//about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        slug:
            type: slug
            uses: title
            group: meta
    viewless: true
    singleton: true
    default_status: published
    icon_many: "fa:home"
    icon_one: "fa:home"


# Pages can be used for the more 'static' pages on your site. This content-type
# has a 'templateselect' field, which allows you to override the record_template
# setting for an individual page.
# The taxonomy for this ContentType is defined as 'groups', which is a so-called
# "grouping taxonomy". This way you can easily group sets of pages that logically
# belong together. If your site has a 'services' section, in which you'd like to
# list the different types of services a company provides, you can group these
# together.

pages:
    name: Pages
    singular_name: Page
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        image:
            type: image
            placeholder: https://source.unsplash.com/1280x768/?business,workplace/__random__
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        template:
            type: templateselect
            filter: '*.twig'
    default_status: published
    taxonomy: [ groups ]
    recordsperpage: 20


# Entries can be used for things like 'news' or 'blogpostings'. They have a
# 'teaser', which can be used for a short blurb on listing-pages, allowing
# visitors to click-through to the rest of the entry. It also has fields for an
# image and an optional video.
# A relation is defined to the pages ContentType. This way you can refer to a
# page from your news-item.
# This ContentType defines 'categories' and 'tags' as taxonomies, allowing the
# editor to use both to categorize a specific entry.
# The 'sort' is set to '-datepublish', which means that newer entries will be
# shown above older entries.

entries:
    name: Entries
    singular_name: Entry
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        image:
            type: image
            group: media
            placeholder: https://source.unsplash.com/1280x768/?business,workspace,interior/__random__
        video:
            type: video
    relations:
        pages:
          multiple: false
          order: title
          label: Select a page
    taxonomy: [ categories, tags ]
    record_template: entry.twig
    listing_template: listing.twig
    listing_records: 10
    default_status: published
    sort: -datepublish
    recordsperpage: 20


# The 'Showcases' is not particularly useful in most cases, but it does a good
# job of showcasing most of the available fieldtypes. Feel free to delete it, or
# copy some fields to your own ContentTypes.
# Since no templates are defined for this ContentType, the default record_template,
# listing_template, and related settings are used from config.yml

showcases:
    name: Showcases
    slug: showcases
    singular_name: Showcase
    singular_slug: showcase
    fields:
        title:
            type: text
            class: large
            required: true
            pattern: ".{2,255}" # see: http://html5pattern.com/
            error: "The Title field is required, and must contain at least 2 characters"
            group: Text
        slug:
            type: slug
            uses: [ title ]
        html:
            type: html
            height: 150px
        textarea:
            type: textarea
            postfix: "<p><em>This is a plain text area. the contents will not be processed.</em></p>"
        markdown:
            type: markdown
            postfix: "<p><em>This field gets parsed as <a href='https://help.github.com/articles/markdown-basics'>Markdown</a>, when rendered on the site.</em></p>"
        geolocation:
            type: geolocation
            group: Media
        embed:
            type: embed
        video:
            type: video
        image:
            type: image
            attrib: title # Note: retrieve this in your template with {{ record.values.image.title }}
            extensions: [ gif, jpg, png ]
            placeholder: https://source.unsplash.com/1280x768/?animal,koala,kitten,puppy,cute/__random__
        imagelist:
            type: imagelist
        file:
            type: file
            group: files
        filelist:
            type: filelist
        checkbox:
            type: checkbox
            label: "This is a checkbox"
            group: other
        datetime:
            type: datetime
            default: "2000-01-01"
            variant: inline
        date:
            type: date
            default: "first day of last month"
            variant: inline
        integerfield:
            type: integer
            index: true
        floatfield:
            type: float
        selectfield:
            type: select
            values: [ foo, bar, baz ]
        multiselect:
            type: select
            values: [ A-tuin, Donatello, Rafael, Leonardo, Michelangelo, Koopa, Squirtle ]
            multiple: true
            postfix: "Select your favourite turtle(s)."
        selectentry:
            type: select
            values: entries/id,title
            postfix: "Select an entry"
            autocomplete: true
            sort: title
        repeater:
            type: repeater
            group: repeater
            limit: 3
            prefix: "<p>This allows you to create multiple sets of fields. Use the add button at the bottom to create a new empty set.</p>"
            fields:
                repeattitle:
                    type: text
                repeatimage:
                    type: image
                    extensions: [ gif, jpg, png ]
                repeatcontent:
                    type: html
    relations:
        entries:
            multiple: false
            label: "Choose an entry"
            order: -id
            format: "{{ item.title|escape }} (№ {{ item.id }})"
            postfix: "By selecting an Entry, you're creating a bi-directional relationship to that Entry."
        pages:
            multiple: true
            order: title
            label: Select zero or more pages
    taxonomy: [ categories, tags ]
    show_on_dashboard: true
    default_status: published
    searchable: true
    icon_many: "fa:gift"
    icon_one: "fa:gift"


# The 'Blocks' ContentType is a so-called 'resource ContentType'. This means
# that it can be used to manage smaller pieces of content, like the 'about us'
# text, an 'our address' in the footer, or similar short blurbs of text.
# For more info, see: https://docs.bolt.cm/howto/resource-contenttype

blocks:
    name: Blocks
    singular_name: Block
    fields:
        title:
            type: text
            class: large
            group: "Block"
        slug:
            type: slug
            uses: [ title ]
        content:
            type: html
            height: 150px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Block. This could either be an 'internal' link like <tt>page/about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        image:
            type: image
            attrib: title
            extensions: [ gif, jpg, png ]
    show_on_dashboard: true
    viewless: true
    default_status: published
    searchable: false
    icon_many: "fa:cubes"
    icon_one: "fa:cube"

# Possible field types:
#
# text - varchar(256) - input type text.
# integer - integer - Input field for integer numbers.
# float - double - Input field for floating numbers, stored as 'Double'.
# geolocation - text (65kb) - Input field for geolocation. Enter an address, and the location is geocoded to latitude/longitude coordinates
# imagelist - text (65kb) - Input type for imagelists. Add multiple images with a description. Useful for image sliders, galleries, etcetera.
# image - varchar(256) - image select/upload widget, stored as filename.
# file - varchar(256) - file select/upload widget, stored as filename.
# filelist - text (65kb) - Input type for a list of files. Including a description.
# video - varchar(256) - Video embed widget, stored as filename.
# html - text (65kb) - wysiwyg element.
# textarea - varchar(32768) - Simple, plain < textarea > field.
# markdown - varchar(32768) - Simple, plain < textarea > field, which is parsed as Markdown text.
# datetime - datetime - date and time selector widget.
# date - datetime - date selector widget.
# select - varchar(256) - select with predefined values
# templateselect - varchar(256) - select with template filenames
# checkbox - integer - checkbox-field which is 1 (checked) or 0 (unchecked)

# Using YAML repeated nodes
#
# YAML allows the defining of "repeated nodes". These allow you to define a 'node'
# with a 'key: &name' and referenced later with '<<: *name'
#
# Bolt allows you to define this with the special entry of '__nodes:' that itself
# won't create a ContentType, but will allow you to use it in actual ContentTypes
# to prevent repeating yourself.
#
# To achieve this, first create a key '__nodes:'
#__nodes:
#    field_defaults: &field_defaults
#        title:
#            type: text
#            class: large
#            group: main
#        slug:
#            type: slug
#            uses: title
#    template_defaults: &template_defaults
#        template:
#            type: templateselect
#            filter: '*.twig'
#            group: meta
#
# Then, as an example, you could create a ContentType with default fields, with
# an additional 'image' field.
#
#contenttype_abc:
#    name: ContentType Abc
#    fields:
#        <<: *field_defaults
#        image:
#            type: image
#            attrib: title
#            extensions: [ gif, jpg, png ]
#        <<: *template_defaults
#    taxonomy: [ chapters ]
#    recordsperpage: 10
#
# Alternatively, or additionally, you then can then create a ContentType with
# default fields, and a 'select' field, and a different 'templateselect' option.
#
#contenttype_xyz:
#    name: ContentType Xyz
#    fields:
#        <<: *field_defaults
#        selectfield:
#            type: select
#            values: [ none, foo, bar ]
#        template:
#            type: templateselect
#            filter: '*_xyz.twig'
#    taxonomy: [ tags ]
#    recordsperpage: 20
";s:4:"save";s:9:"undefined";}}s:15:"request_headers";a:12:{s:4:"host";s:32:"bolt.independent-tutorials.local";s:10:"user-agent";s:76:"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0";s:6:"accept";s:3:"*/*";s:15:"accept-language";s:14:"en-GB,en;q=0.5";s:15:"accept-encoding";s:13:"gzip, deflate";s:7:"referer";s:83:"http://bolt.independent-tutorials.local/bolt/bolt/file/edit/config/contenttypes.yml";s:12:"content-type";s:48:"application/x-www-form-urlencoded; charset=UTF-8";s:16:"x-requested-with";s:14:"XMLHttpRequest";s:14:"content-length";s:5:"15474";s:6:"cookie";s:272:"bolt_session_0a08e45bb3f49347c4952afb1d259824=543edfff5e06e21deb495795c57a16ea; bolt_authtoken_0a08e45bb3f49347c4952afb1d259824=a750706d560e2f7a6805548d349f9a1fc34ea6ae0703c457927972bafd696108; bolt_session_078ae37dc7d4a500338067fc60f73f9c=57c26788353df2fb3afba0d1a0cbc412";s:10:"connection";s:10:"keep-alive";s:14:"x-php-ob-level";i:1;}s:14:"request_server";a:39:{s:13:"REDIRECT_BASE";s:5:"/bolt";s:15:"REDIRECT_STATUS";s:3:"200";s:4:"BASE";s:5:"/bolt";s:9:"HTTP_HOST";s:32:"bolt.independent-tutorials.local";s:15:"HTTP_USER_AGENT";s:76:"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0";s:11:"HTTP_ACCEPT";s:3:"*/*";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-GB,en;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:83:"http://bolt.independent-tutorials.local/bolt/bolt/file/edit/config/contenttypes.yml";s:12:"CONTENT_TYPE";s:48:"application/x-www-form-urlencoded; charset=UTF-8";s:21:"HTTP_X_REQUESTED_WITH";s:14:"XMLHttpRequest";s:14:"CONTENT_LENGTH";s:5:"15474";s:11:"HTTP_COOKIE";s:272:"bolt_session_0a08e45bb3f49347c4952afb1d259824=543edfff5e06e21deb495795c57a16ea; bolt_authtoken_0a08e45bb3f49347c4952afb1d259824=a750706d560e2f7a6805548d349f9a1fc34ea6ae0703c457927972bafd696108; bolt_session_078ae37dc7d4a500338067fc60f73f9c=57c26788353df2fb3afba0d1a0cbc412";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:4:"PATH";s:60:"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin";s:16:"SERVER_SIGNATURE";s:93:"<address>Apache/2.4.18 (Ubuntu) Server at bolt.independent-tutorials.local Port 80</address>
";s:15:"SERVER_SOFTWARE";s:22:"Apache/2.4.18 (Ubuntu)";s:11:"SERVER_NAME";s:32:"bolt.independent-tutorials.local";s:11:"SERVER_ADDR";s:14:"192.168.178.38";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"192.168.178.37";s:13:"DOCUMENT_ROOT";s:20:"/var/www/bolt/public";s:14:"REQUEST_SCHEME";s:4:"http";s:14:"CONTEXT_PREFIX";s:0:"";s:21:"CONTEXT_DOCUMENT_ROOT";s:20:"/var/www/bolt/public";s:12:"SERVER_ADMIN";s:18:"studcorp@localhost";s:15:"SCRIPT_FILENAME";s:30:"/var/www/bolt/public/index.php";s:11:"REMOTE_PORT";s:5:"49682";s:12:"REDIRECT_URL";s:44:"/bolt/bolt/file/edit/config/contenttypes.yml";s:21:"REDIRECT_QUERY_STRING";s:13:"returnto=ajax";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:13:"returnto=ajax";s:11:"REQUEST_URI";s:58:"/bolt/bolt/file/edit/config/contenttypes.yml?returnto=ajax";s:11:"SCRIPT_NAME";s:15:"/bolt/index.php";s:8:"PHP_SELF";s:15:"/bolt/index.php";s:18:"REQUEST_TIME_FLOAT";d:1526934386.668;s:12:"REQUEST_TIME";i:1526934386;}s:15:"request_cookies";a:3:{s:45:"bolt_session_0a08e45bb3f49347c4952afb1d259824";s:32:"543edfff5e06e21deb495795c57a16ea";s:47:"bolt_authtoken_0a08e45bb3f49347c4952afb1d259824";s:64:"a750706d560e2f7a6805548d349f9a1fc34ea6ae0703c457927972bafd696108";s:45:"bolt_session_078ae37dc7d4a500338067fc60f73f9c";s:32:"57c26788353df2fb3afba0d1a0cbc412";}s:18:"request_attributes";a:6:{s:11:"_controller";s:61:"[0 => Object(Bolt\Controller\Backend\FileManager), 1 => edit]";s:9:"namespace";s:6:"config";s:4:"zone";s:7:"backend";s:4:"file";s:16:"contenttypes.yml";s:6:"_route";s:8:"fileedit";s:13:"_route_params";a:3:{s:9:"namespace";s:6:"config";s:4:"zone";s:7:"backend";s:4:"file";s:16:"contenttypes.yml";}}s:16:"response_headers";a:7:{s:13:"cache-control";s:8:"no-cache";s:4:"date";s:29:"Mon, 21 May 2018 20:26:26 GMT";s:12:"content-type";s:16:"application/json";s:15:"x-frame-options";s:10:"SAMEORIGIN";s:13:"frame-options";s:10:"SAMEORIGIN";s:16:"x-xss-protection";i:0;s:13:"x-debug-token";s:6:"0e5101";}s:16:"session_metadata";a:3:{s:7:"Created";s:29:"Mon, 21 May 18 21:38:23 +0200";s:9:"Last used";s:29:"Mon, 21 May 18 22:25:46 +0200";s:8:"Lifetime";s:1:"0";}s:18:"session_attributes";a:7:{s:16:"_csrf/user_login";s:43:"cPHa_sr0UecaYJS7nvIbIpz1I1wSBxScD2kc__mzvQE";s:14:"authentication";O:30:"Bolt\AccessControl\Token\Token":3:{s:7:" * user";O:25:"Bolt\Storage\Entity\Users":17:{s:5:" * id";i:2;s:11:" * username";s:8:"studcorp";s:11:" * password";N;s:8:" * email";s:34:"kristoff.klan@stud.hs-flensburg.de";s:11:" * lastseen";O:13:"Carbon\Carbon":3:{s:4:"date";s:26:"2018-05-21 21:39:07.000000";s:13:"timezone_type";i:3;s:8:"timezone";s:13:"Europe/Berlin";}s:9:" * lastip";s:14:"192.168.178.37";s:14:" * displayname";s:8:"StudCorp";s:8:" * stack";a:0:{}s:10:" * enabled";i:1;s:17:" * shadowpassword";N;s:14:" * shadowtoken";N;s:17:" * shadowvalidity";N;s:15:" * failedlogins";i:0;s:17:" * throttleduntil";N;s:8:" * roles";a:2:{i:0;s:4:"root";i:1;s:8:"everyone";}s:7:"_fields";a:0:{}s:12:" * _internal";a:1:{i:0;s:11:"contenttype";}}s:8:" * token";O:29:"Bolt\Storage\Entity\Authtoken":10:{s:5:" * id";i:2;s:10:" * user_id";i:2;s:8:" * token";s:64:"a750706d560e2f7a6805548d349f9a1fc34ea6ae0703c457927972bafd696108";s:7:" * salt";s:32:"a234823f17a3a987c4c5540d7f85b2f5";s:11:" * lastseen";O:13:"Carbon\Carbon":3:{s:4:"date";s:26:"2018-05-21 21:39:07.000000";s:13:"timezone_type";i:3;s:8:"timezone";s:13:"Europe/Berlin";}s:5:" * ip";s:14:"192.168.178.37";s:12:" * useragent";s:76:"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0";s:11:" * validity";O:13:"Carbon\Carbon":3:{s:4:"date";s:26:"2018-06-04 21:39:07.000000";s:13:"timezone_type";i:3;s:8:"timezone";s:13:"Europe/Berlin";}s:7:"_fields";a:0:{}s:12:" * _internal";a:1:{i:0;s:11:"contenttype";}}s:10:" * checked";i:1526934323;}s:5:"stack";a:0:{}s:17:"_csrf/file_upload";s:43:"nYtLdgMc-qEzhs1wbcHfuGnzGRJ0rRvCxHoNPc-M45E";s:15:"_csrf/file_edit";s:43:"r5FdfdaX5fYA-6EVQ1LsmgOCousmiPFgqy6UV2oUWpk";s:10:"_csrf/bolt";s:43:"j0p968jc2W3K2MUu9Tz7z6F7O1o7cAC2DkPefy3Z4kM";s:18:"_csrf/content_edit";s:43:"ef5Abx6JXgQEf8bI_LnZo8CDvgxLfPXsUTiB6siCZAo";}s:7:"flashes";a:0:{}s:9:"path_info";s:39:"/bolt/file/edit/config/contenttypes.yml";s:10:"controller";a:4:{s:5:"class";s:35:"Bolt\Controller\Backend\FileManager";s:6:"method";s:4:"edit";s:4:"file";s:69:"/var/www/bolt/vendor/bolt/bolt/src/Controller/Backend/FileManager.php";s:4:"line";i:65;}s:6:"locale";s:5:"de_DE";}}s:9:"exception";C:65:"Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector":6:{a:0:{}}s:6:"events";C:61:"Symfony\Component\HttpKernel\DataCollector\EventDataCollector":27354:{a:2:{s:16:"called_listeners";a:48:{s:66:"controller.mount.Bundle\Site\CustomisationExtension::onMountRoutes";a:8:{s:5:"event";s:16:"controller.mount";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:34:"Bundle\Site\CustomisationExtension";s:6:"method";s:13:"onMountRoutes";s:4:"file";s:64:"/var/www/bolt/vendor/bolt/bolt/src/Extension/ControllerTrait.php";s:4:"line";i:42;s:6:"pretty";s:49:"Bundle\Site\CustomisationExtension::onMountRoutes";}s:71:"controller.mount.Bundle\Site\CustomisationExtension::onMountControllers";a:8:{s:5:"event";s:16:"controller.mount";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:34:"Bundle\Site\CustomisationExtension";s:6:"method";s:18:"onMountControllers";s:4:"file";s:69:"/var/www/bolt/vendor/bolt/bolt/src/Extension/ControllerMountTrait.php";s:4:"line";i:58;s:6:"pretty";s:54:"Bundle\Site\CustomisationExtension::onMountControllers";}s:24:"controller.mount.closure";a:4:{s:5:"event";s:16:"controller.mount";s:8:"priority";i:0;s:4:"type";s:7:"Closure";s:6:"pretty";s:7:"closure";}s:72:"controller.mount.Bolt\Provider\ControllerServiceProvider::onMountBackend";a:8:{s:5:"event";s:16:"controller.mount";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:39:"Bolt\Provider\ControllerServiceProvider";s:6:"method";s:14:"onMountBackend";s:4:"file";s:73:"/var/www/bolt/vendor/bolt/bolt/src/Provider/ControllerServiceProvider.php";s:4:"line";i:156;s:6:"pretty";s:55:"Bolt\Provider\ControllerServiceProvider::onMountBackend";}s:50:"controller.mount.Bolt\Application::initMountpoints";a:8:{s:5:"event";s:16:"controller.mount";s:8:"priority";i:-10;s:4:"type";s:6:"Method";s:5:"class";s:16:"Bolt\Application";s:6:"method";s:15:"initMountpoints";s:4:"file";s:50:"/var/www/bolt/vendor/bolt/bolt/src/Application.php";s:4:"line";i:301;s:6:"pretty";s:33:"Bolt\Application::initMountpoints";}s:73:"controller.mount.Bolt\Provider\ControllerServiceProvider::onMountFrontend";a:8:{s:5:"event";s:16:"controller.mount";s:8:"priority";i:-50;s:4:"type";s:6:"Method";s:5:"class";s:39:"Bolt\Provider\ControllerServiceProvider";s:6:"method";s:15:"onMountFrontend";s:4:"file";s:73:"/var/www/bolt/vendor/bolt/bolt/src/Provider/ControllerServiceProvider.php";s:4:"line";i:150;s:6:"pretty";s:56:"Bolt\Provider\ControllerServiceProvider::onMountFrontend";}s:66:"postHydrate.Bolt\EventListener\StorageEventListener::onPostHydrate";a:8:{s:5:"event";s:11:"postHydrate";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:39:"Bolt\EventListener\StorageEventListener";s:6:"method";s:13:"onPostHydrate";s:4:"file";s:73:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/StorageEventListener.php";s:4:"line";i:99;s:6:"pretty";s:54:"Bolt\EventListener\StorageEventListener::onPostHydrate";}s:90:"kernel.request.Symfony\Component\HttpKernel\EventListener\DebugHandlersListener::configure";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:2048;s:4:"type";s:6:"Method";s:5:"class";s:64:"Symfony\Component\HttpKernel\EventListener\DebugHandlersListener";s:6:"method";s:9:"configure";s:4:"file";s:80:"/var/www/bolt/vendor/symfony/http-kernel/EventListener/DebugHandlersListener.php";s:4:"line";i:62;s:6:"pretty";s:75:"Symfony\Component\HttpKernel\EventListener\DebugHandlersListener::configure";}s:91:"kernel.request.Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:1024;s:4:"type";s:6:"Method";s:5:"class";s:59:"Symfony\Component\HttpKernel\EventListener\ProfilerListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:75:"/var/www/bolt/vendor/symfony/http-kernel/EventListener/ProfilerListener.php";s:4:"line";i:93;s:6:"pretty";s:76:"Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelRequest";}s:64:"kernel.request.Bolt\EventListener\ConfigListener::onRequestEarly";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:512;s:4:"type";s:6:"Method";s:5:"class";s:33:"Bolt\EventListener\ConfigListener";s:6:"method";s:14:"onRequestEarly";s:4:"file";s:67:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/ConfigListener.php";s:4:"line";i:48;s:6:"pretty";s:49:"Bolt\EventListener\ConfigListener::onRequestEarly";}s:54:"kernel.request.Bolt\Session\SessionListener::onRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:128;s:4:"type";s:6:"Method";s:5:"class";s:28:"Bolt\Session\SessionListener";s:6:"method";s:9:"onRequest";s:4:"file";s:57:"/var/www/bolt/vendor/bolt/session/src/SessionListener.php";s:4:"line";i:42;s:6:"pretty";s:39:"Bolt\Session\SessionListener::onRequest";}s:64:"kernel.request.Bolt\EventListener\FlashLoggerListener::onRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:127;s:4:"type";s:6:"Method";s:5:"class";s:38:"Bolt\EventListener\FlashLoggerListener";s:6:"method";s:9:"onRequest";s:4:"file";s:72:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/FlashLoggerListener.php";s:4:"line";i:45;s:6:"pretty";s:49:"Bolt\EventListener\FlashLoggerListener::onRequest";}s:59:"kernel.request.Bolt\Profiler\DebugToolbarEnabler::onRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:126;s:4:"type";s:6:"Method";s:5:"class";s:33:"Bolt\Profiler\DebugToolbarEnabler";s:6:"method";s:9:"onRequest";s:4:"file";s:67:"/var/www/bolt/vendor/bolt/bolt/src/Profiler/DebugToolbarEnabler.php";s:4:"line";i:32;s:6:"pretty";s:44:"Bolt\Profiler\DebugToolbarEnabler::onRequest";}s:91:"kernel.request.Symfony\Component\HttpKernel\EventListener\FragmentListener::onKernelRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:48;s:4:"type";s:6:"Method";s:5:"class";s:59:"Symfony\Component\HttpKernel\EventListener\FragmentListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:75:"/var/www/bolt/vendor/symfony/http-kernel/EventListener/FragmentListener.php";s:4:"line";i:52;s:6:"pretty";s:76:"Symfony\Component\HttpKernel\EventListener\FragmentListener::onKernelRequest";}s:74:"kernel.request.Bolt\Configuration\ConfigurationValueProxy::onKernelRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:34;s:4:"type";s:6:"Method";s:5:"class";s:42:"Bolt\Configuration\ConfigurationValueProxy";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:76:"/var/www/bolt/vendor/bolt/bolt/src/Configuration/ConfigurationValueProxy.php";s:4:"line";i:120;s:6:"pretty";s:59:"Bolt\Configuration\ConfigurationValueProxy::onKernelRequest";}s:59:"kernel.request.Bolt\EventListener\ConfigListener::onRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:33;s:4:"type";s:6:"Method";s:5:"class";s:33:"Bolt\EventListener\ConfigListener";s:6:"method";s:9:"onRequest";s:4:"file";s:67:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/ConfigListener.php";s:4:"line";i:62;s:6:"pretty";s:44:"Bolt\EventListener\ConfigListener::onRequest";}s:89:"kernel.request.Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:32;s:4:"type";s:6:"Method";s:5:"class";s:57:"Symfony\Component\HttpKernel\EventListener\RouterListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:73:"/var/www/bolt/vendor/symfony/http-kernel/EventListener/RouterListener.php";s:4:"line";i:136;s:6:"pretty";s:74:"Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelRequest";}s:71:"kernel.request.Bolt\EventListener\StorageEventListener::onKernelRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:31;s:4:"type";s:6:"Method";s:5:"class";s:39:"Bolt\EventListener\StorageEventListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:73:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/StorageEventListener.php";s:4:"line";i:146;s:6:"pretty";s:56:"Bolt\EventListener\StorageEventListener::onKernelRequest";}s:62:"kernel.request.Bolt\EventListener\ZoneGuesser::onKernelRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:31;s:4:"type";s:6:"Method";s:5:"class";s:30:"Bolt\EventListener\ZoneGuesser";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:64:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/ZoneGuesser.php";s:4:"line";i:37;s:6:"pretty";s:47:"Bolt\EventListener\ZoneGuesser::onKernelRequest";}s:48:"kernel.request.Bolt\Routing\Canonical::onRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:31;s:4:"type";s:6:"Method";s:5:"class";s:22:"Bolt\Routing\Canonical";s:6:"method";s:9:"onRequest";s:4:"file";s:56:"/var/www/bolt/vendor/bolt/bolt/src/Routing/Canonical.php";s:4:"line";i:131;s:6:"pretty";s:33:"Bolt\Routing\Canonical::onRequest";}s:66:"kernel.request.Silex\EventListener\LocaleListener::onKernelRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:16;s:4:"type";s:6:"Method";s:5:"class";s:34:"Silex\EventListener\LocaleListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:75:"/var/www/bolt/vendor/silex/silex/src/Silex/EventListener/LocaleListener.php";s:4:"line";i:41;s:6:"pretty";s:51:"Silex\EventListener\LocaleListener::onKernelRequest";}s:72:"kernel.request.Symfony\Component\Security\Http\Firewall::onKernelRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:8;s:4:"type";s:6:"Method";s:5:"class";s:40:"Symfony\Component\Security\Http\Firewall";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:55:"/var/www/bolt/vendor/symfony/security/Http/Firewall.php";s:4:"line";i:43;s:6:"pretty";s:57:"Symfony\Component\Security\Http\Firewall::onKernelRequest";}s:22:"kernel.request.closure";a:4:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:0;s:4:"type";s:7:"Closure";s:6:"pretty";s:7:"closure";}s:63:"kernel.request.Silex\EventListener\LogListener::onKernelRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:31:"Silex\EventListener\LogListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:72:"/var/www/bolt/vendor/silex/silex/src/Silex/EventListener/LogListener.php";s:4:"line";i:43;s:6:"pretty";s:48:"Silex\EventListener\LogListener::onKernelRequest";}s:67:"kernel.request.Bolt\EventListener\ProfilerListener::onKernelRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:35:"Bolt\EventListener\ProfilerListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:69:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/ProfilerListener.php";s:4:"line";i:50;s:6:"pretty";s:52:"Bolt\EventListener\ProfilerListener::onKernelRequest";}s:58:"kernel.request.Bolt\EventListener\PagerListener::onRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:32:"Bolt\EventListener\PagerListener";s:6:"method";s:9:"onRequest";s:4:"file";s:66:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/PagerListener.php";s:4:"line";i:34;s:6:"pretty";s:43:"Bolt\EventListener\PagerListener::onRequest";}s:100:"kernel.request.Bolt\ConfigurationNotices\EventListener\ConfigurationNoticesListener::onKernelRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:68:"Bolt\ConfigurationNotices\EventListener\ConfigurationNoticesListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:98:"/var/www/bolt/vendor/bolt/configuration-notices/src/EventListener/ConfigurationNoticesListener.php";s:4:"line";i:45;s:6:"pretty";s:85:"Bolt\ConfigurationNotices\EventListener\ConfigurationNoticesListener::onKernelRequest";}s:70:"kernel.request.Silex\EventListener\MiddlewareListener::onKernelRequest";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:-1024;s:4:"type";s:6:"Method";s:5:"class";s:38:"Silex\EventListener\MiddlewareListener";s:6:"method";s:15:"onKernelRequest";s:4:"file";s:79:"/var/www/bolt/vendor/silex/silex/src/Silex/EventListener/MiddlewareListener.php";s:4:"line";i:45;s:6:"pretty";s:55:"Silex\EventListener\MiddlewareListener::onKernelRequest";}s:62:"kernel.request.Bolt\EventListener\FlashLoggerListener::onEvent";a:8:{s:5:"event";s:14:"kernel.request";s:8:"priority";i:-1024;s:4:"type";s:6:"Method";s:5:"class";s:38:"Bolt\EventListener\FlashLoggerListener";s:6:"method";s:7:"onEvent";s:4:"file";s:72:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/FlashLoggerListener.php";s:4:"line";i:65;s:6:"pretty";s:47:"Bolt\EventListener\FlashLoggerListener::onEvent";}s:75:"kernel.controller.Silex\EventListener\ConverterListener::onKernelController";a:8:{s:5:"event";s:17:"kernel.controller";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:37:"Silex\EventListener\ConverterListener";s:6:"method";s:18:"onKernelController";s:4:"file";s:78:"/var/www/bolt/vendor/silex/silex/src/Silex/EventListener/ConverterListener.php";s:4:"line";i:47;s:6:"pretty";s:57:"Silex\EventListener\ConverterListener::onKernelController";}s:101:"kernel.controller.Symfony\Component\HttpKernel\DataCollector\RequestDataCollector::onKernelController";a:8:{s:5:"event";s:17:"kernel.controller";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:63:"Symfony\Component\HttpKernel\DataCollector\RequestDataCollector";s:6:"method";s:18:"onKernelController";s:4:"file";s:79:"/var/www/bolt/vendor/symfony/http-kernel/DataCollector/RequestDataCollector.php";s:4:"line";i:292;s:6:"pretty";s:83:"Symfony\Component\HttpKernel\DataCollector\RequestDataCollector::onKernelController";}s:63:"kernel.response.Bolt\EventListener\FlashLoggerListener::onEvent";a:8:{s:5:"event";s:15:"kernel.response";s:8:"priority";i:1000;s:4:"type";s:6:"Method";s:5:"class";s:38:"Bolt\EventListener\FlashLoggerListener";s:6:"method";s:7:"onEvent";s:4:"file";s:72:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/FlashLoggerListener.php";s:4:"line";i:65;s:6:"pretty";s:47:"Bolt\EventListener\FlashLoggerListener::onEvent";}s:72:"kernel.response.Silex\EventListener\MiddlewareListener::onKernelResponse";a:8:{s:5:"event";s:15:"kernel.response";s:8:"priority";i:128;s:4:"type";s:6:"Method";s:5:"class";s:38:"Silex\EventListener\MiddlewareListener";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:79:"/var/www/bolt/vendor/silex/silex/src/Silex/EventListener/MiddlewareListener.php";s:4:"line";i:70;s:6:"pretty";s:56:"Silex\EventListener\MiddlewareListener::onKernelResponse";}s:93:"kernel.response.Symfony\Component\HttpKernel\EventListener\ResponseListener::onKernelResponse";a:8:{s:5:"event";s:15:"kernel.response";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:59:"Symfony\Component\HttpKernel\EventListener\ResponseListener";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:75:"/var/www/bolt/vendor/symfony/http-kernel/EventListener/ResponseListener.php";s:4:"line";i:35;s:6:"pretty";s:77:"Symfony\Component\HttpKernel\EventListener\ResponseListener::onKernelResponse";}s:23:"kernel.response.closure";a:4:{s:5:"event";s:15:"kernel.response";s:8:"priority";i:0;s:4:"type";s:7:"Closure";s:6:"pretty";s:7:"closure";}s:65:"kernel.response.Silex\EventListener\LogListener::onKernelResponse";a:8:{s:5:"event";s:15:"kernel.response";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:31:"Silex\EventListener\LogListener";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:72:"/var/www/bolt/vendor/silex/silex/src/Silex/EventListener/LogListener.php";s:4:"line";i:57;s:6:"pretty";s:49:"Silex\EventListener\LogListener::onKernelResponse";}s:94:"kernel.response.Symfony\Component\HttpKernel\EventListener\SurrogateListener::onKernelResponse";a:8:{s:5:"event";s:15:"kernel.response";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:60:"Symfony\Component\HttpKernel\EventListener\SurrogateListener";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:76:"/var/www/bolt/vendor/symfony/http-kernel/EventListener/SurrogateListener.php";s:4:"line";i:36;s:6:"pretty";s:78:"Symfony\Component\HttpKernel\EventListener\SurrogateListener::onKernelResponse";}s:62:"kernel.response.Bolt\EventListener\GeneralListener::onResponse";a:8:{s:5:"event";s:15:"kernel.response";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:34:"Bolt\EventListener\GeneralListener";s:6:"method";s:10:"onResponse";s:4:"file";s:68:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/GeneralListener.php";s:4:"line";i:38;s:6:"pretty";s:46:"Bolt\EventListener\GeneralListener::onResponse";}s:75:"kernel.response.Bolt\EventListener\DisableXssProtectionListener::onResponse";a:8:{s:5:"event";s:15:"kernel.response";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:47:"Bolt\EventListener\DisableXssProtectionListener";s:6:"method";s:10:"onResponse";s:4:"file";s:81:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/DisableXssProtectionListener.php";s:4:"line";i:36;s:6:"pretty";s:59:"Bolt\EventListener\DisableXssProtectionListener::onResponse";}s:62:"kernel.response.Bolt\EventListener\SnippetListener::onResponse";a:8:{s:5:"event";s:15:"kernel.response";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:34:"Bolt\EventListener\SnippetListener";s:6:"method";s:10:"onResponse";s:4:"file";s:68:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/SnippetListener.php";s:4:"line";i:49;s:6:"pretty";s:46:"Bolt\EventListener\SnippetListener::onResponse";}s:63:"kernel.response.Bolt\EventListener\RedirectListener::onResponse";a:8:{s:5:"event";s:15:"kernel.response";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:35:"Bolt\EventListener\RedirectListener";s:6:"method";s:10:"onResponse";s:4:"file";s:69:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/RedirectListener.php";s:4:"line";i:56;s:6:"pretty";s:47:"Bolt\EventListener\RedirectListener::onResponse";}s:93:"kernel.response.Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelResponse";a:8:{s:5:"event";s:15:"kernel.response";s:8:"priority";i:-100;s:4:"type";s:6:"Method";s:5:"class";s:59:"Symfony\Component\HttpKernel\EventListener\ProfilerListener";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:75:"/var/www/bolt/vendor/symfony/http-kernel/EventListener/ProfilerListener.php";s:4:"line";i:103;s:6:"pretty";s:77:"Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelResponse";}s:56:"kernel.response.Bolt\Session\SessionListener::onResponse";a:8:{s:5:"event";s:15:"kernel.response";s:8:"priority";i:-128;s:4:"type";s:6:"Method";s:5:"class";s:28:"Bolt\Session\SessionListener";s:6:"method";s:10:"onResponse";s:4:"file";s:57:"/var/www/bolt/vendor/bolt/session/src/SessionListener.php";s:4:"line";i:66;s:6:"pretty";s:40:"Bolt\Session\SessionListener::onResponse";}s:104:"kernel.response.Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener::onKernelResponse";a:8:{s:5:"event";s:15:"kernel.response";s:8:"priority";i:-128;s:4:"type";s:6:"Method";s:5:"class";s:70:"Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener";s:6:"method";s:16:"onKernelResponse";s:4:"file";s:90:"/var/www/bolt/vendor/symfony/web-profiler-bundle/EventListener/WebDebugToolbarListener.php";s:4:"line";i:60;s:6:"pretty";s:88:"Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener::onKernelResponse";}s:102:"kernel.finish_request.Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelFinishRequest";a:8:{s:5:"event";s:21:"kernel.finish_request";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:57:"Symfony\Component\HttpKernel\EventListener\RouterListener";s:6:"method";s:21:"onKernelFinishRequest";s:4:"file";s:73:"/var/www/bolt/vendor/symfony/http-kernel/EventListener/RouterListener.php";s:4:"line";i:127;s:6:"pretty";s:80:"Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelFinishRequest";}s:79:"kernel.finish_request.Silex\EventListener\LocaleListener::onKernelFinishRequest";a:8:{s:5:"event";s:21:"kernel.finish_request";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:34:"Silex\EventListener\LocaleListener";s:6:"method";s:21:"onKernelFinishRequest";s:4:"file";s:73:"/var/www/bolt/vendor/symfony/http-kernel/EventListener/LocaleListener.php";s:4:"line";i:104;s:6:"pretty";s:57:"Silex\EventListener\LocaleListener::onKernelFinishRequest";}s:85:"kernel.finish_request.Symfony\Component\Security\Http\Firewall::onKernelFinishRequest";a:8:{s:5:"event";s:21:"kernel.finish_request";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:40:"Symfony\Component\Security\Http\Firewall";s:6:"method";s:21:"onKernelFinishRequest";s:4:"file";s:55:"/var/www/bolt/vendor/symfony/security/Http/Firewall.php";s:4:"line";i:66;s:6:"pretty";s:63:"Symfony\Component\Security\Http\Firewall::onKernelFinishRequest";}s:61:"kernel.finish_request.Bolt\Routing\Canonical::onFinishRequest";a:8:{s:5:"event";s:21:"kernel.finish_request";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:22:"Bolt\Routing\Canonical";s:6:"method";s:15:"onFinishRequest";s:4:"file";s:56:"/var/www/bolt/vendor/bolt/bolt/src/Routing/Canonical.php";s:4:"line";i:143;s:6:"pretty";s:39:"Bolt\Routing\Canonical::onFinishRequest";}}s:20:"not_called_listeners";a:16:{s:91:"console.command.Symfony\Component\HttpKernel\EventListener\DebugHandlersListener::configure";a:8:{s:5:"event";s:15:"console.command";s:8:"priority";i:2048;s:4:"type";s:6:"Method";s:5:"class";s:64:"Symfony\Component\HttpKernel\EventListener\DebugHandlersListener";s:6:"method";s:9:"configure";s:4:"file";s:80:"/var/www/bolt/vendor/symfony/http-kernel/EventListener/DebugHandlersListener.php";s:4:"line";i:62;s:6:"pretty";s:75:"Symfony\Component\HttpKernel\EventListener\DebugHandlersListener::configure";}s:70:"kernel.exception.Bolt\EventListener\ExceptionListener::onBootException";a:8:{s:5:"event";s:16:"kernel.exception";s:8:"priority";i:512;s:4:"type";s:6:"Method";s:5:"class";s:36:"Bolt\EventListener\ExceptionListener";s:6:"method";s:15:"onBootException";s:4:"file";s:70:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/ExceptionListener.php";s:4:"line";i:105;s:6:"pretty";s:53:"Bolt\EventListener\ExceptionListener::onBootException";}s:68:"preSave.Bolt\EventListener\StorageEventListener::onUserEntityPreSave";a:8:{s:5:"event";s:7:"preSave";s:8:"priority";i:512;s:4:"type";s:6:"Method";s:5:"class";s:39:"Bolt\EventListener\StorageEventListener";s:6:"method";s:19:"onUserEntityPreSave";s:4:"file";s:73:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/StorageEventListener.php";s:4:"line";i:84;s:6:"pretty";s:60:"Bolt\EventListener\StorageEventListener::onUserEntityPreSave";}s:24:"kernel.terminate.closure";a:4:{s:5:"event";s:16:"kernel.terminate";s:8:"priority";i:0;s:4:"type";s:7:"Closure";s:6:"pretty";s:7:"closure";}s:95:"kernel.exception.Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelException";a:8:{s:5:"event";s:16:"kernel.exception";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:59:"Symfony\Component\HttpKernel\EventListener\ProfilerListener";s:6:"method";s:17:"onKernelException";s:4:"file";s:75:"/var/www/bolt/vendor/symfony/http-kernel/EventListener/ProfilerListener.php";s:4:"line";i:81;s:6:"pretty";s:78:"Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelException";}s:59:"kernel.view.Bolt\EventListener\TemplateViewListener::onView";a:8:{s:5:"event";s:11:"kernel.view";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:39:"Bolt\EventListener\TemplateViewListener";s:6:"method";s:6:"onView";s:4:"file";s:73:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/TemplateViewListener.php";s:4:"line";i:37;s:6:"pretty";s:47:"Bolt\EventListener\TemplateViewListener::onView";}s:62:"preDelete.Bolt\EventListener\StorageEventListener::onPreDelete";a:8:{s:5:"event";s:9:"preDelete";s:8:"priority";i:0;s:4:"type";s:6:"Method";s:5:"class";s:39:"Bolt\EventListener\StorageEventListener";s:6:"method";s:11:"onPreDelete";s:4:"file";s:73:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/StorageEventListener.php";s:4:"line";i:119;s:6:"pretty";s:52:"Bolt\EventListener\StorageEventListener::onPreDelete";}s:67:"kernel.exception.Silex\EventListener\LogListener::onKernelException";a:8:{s:5:"event";s:16:"kernel.exception";s:8:"priority";i:-4;s:4:"type";s:6:"Method";s:5:"class";s:31:"Silex\EventListener\LogListener";s:6:"method";s:17:"onKernelException";s:4:"file";s:72:"/var/www/bolt/vendor/silex/silex/src/Silex/EventListener/LogListener.php";s:4:"line";i:71;s:6:"pretty";s:50:"Silex\EventListener\LogListener::onKernelException";}s:69:"kernel.exception.Bolt\EventListener\SystemLoggerListener::onException";a:8:{s:5:"event";s:16:"kernel.exception";s:8:"priority";i:-4;s:4:"type";s:6:"Method";s:5:"class";s:39:"Bolt\EventListener\SystemLoggerListener";s:6:"method";s:11:"onException";s:4:"file";s:73:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/SystemLoggerListener.php";s:4:"line";i:38;s:6:"pretty";s:52:"Bolt\EventListener\SystemLoggerListener::onException";}s:72:"kernel.exception.Bolt\EventListener\ExceptionToJsonListener::onException";a:8:{s:5:"event";s:16:"kernel.exception";s:8:"priority";i:-5;s:4:"type";s:6:"Method";s:5:"class";s:42:"Bolt\EventListener\ExceptionToJsonListener";s:6:"method";s:11:"onException";s:4:"file";s:76:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/ExceptionToJsonListener.php";s:4:"line";i:40;s:6:"pretty";s:55:"Bolt\EventListener\ExceptionToJsonListener::onException";}s:71:"kernel.exception.Bolt\EventListener\NotFoundListener::onKernelException";a:8:{s:5:"event";s:16:"kernel.exception";s:8:"priority";i:-6;s:4:"type";s:6:"Method";s:5:"class";s:35:"Bolt\EventListener\NotFoundListener";s:6:"method";s:17:"onKernelException";s:4:"file";s:69:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/NotFoundListener.php";s:4:"line";i:57;s:6:"pretty";s:54:"Bolt\EventListener\NotFoundListener::onKernelException";}s:57:"kernel.exception.Silex\ExceptionListenerWrapper::__invoke";a:8:{s:5:"event";s:16:"kernel.exception";s:8:"priority";i:-8;s:4:"type";s:6:"Method";s:5:"class";s:30:"Silex\ExceptionListenerWrapper";s:6:"method";s:8:"__invoke";s:4:"file";s:71:"/var/www/bolt/vendor/silex/silex/src/Silex/ExceptionListenerWrapper.php";s:4:"line";i:42;s:6:"pretty";s:40:"Silex\ExceptionListenerWrapper::__invoke";}s:72:"kernel.exception.Bolt\EventListener\ExceptionListener::onKernelException";a:8:{s:5:"event";s:16:"kernel.exception";s:8:"priority";i:-8;s:4:"type";s:6:"Method";s:5:"class";s:36:"Bolt\EventListener\ExceptionListener";s:6:"method";s:17:"onKernelException";s:4:"file";s:70:"/var/www/bolt/vendor/bolt/bolt/src/EventListener/ExceptionListener.php";s:4:"line";i:122;s:6:"pretty";s:55:"Bolt\EventListener\ExceptionListener::onKernelException";}s:70:"kernel.view.Silex\EventListener\StringToResponseListener::onKernelView";a:8:{s:5:"event";s:11:"kernel.view";s:8:"priority";i:-10;s:4:"type";s:6:"Method";s:5:"class";s:44:"Silex\EventListener\StringToResponseListener";s:6:"method";s:12:"onKernelView";s:4:"file";s:85:"/var/www/bolt/vendor/silex/silex/src/Silex/EventListener/StringToResponseListener.php";s:4:"line";i:31;s:6:"pretty";s:58:"Silex\EventListener\StringToResponseListener::onKernelView";}s:53:"kernel.exception.Silex\ExceptionHandler::onSilexError";a:8:{s:5:"event";s:16:"kernel.exception";s:8:"priority";i:-255;s:4:"type";s:6:"Method";s:5:"class";s:22:"Silex\ExceptionHandler";s:6:"method";s:12:"onSilexError";s:4:"file";s:63:"/var/www/bolt/vendor/silex/silex/src/Silex/ExceptionHandler.php";s:4:"line";i:45;s:6:"pretty";s:36:"Silex\ExceptionHandler::onSilexError";}s:95:"kernel.terminate.Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelTerminate";a:8:{s:5:"event";s:16:"kernel.terminate";s:8:"priority";i:-1024;s:4:"type";s:6:"Method";s:5:"class";s:59:"Symfony\Component\HttpKernel\EventListener\ProfilerListener";s:6:"method";s:17:"onKernelTerminate";s:4:"file";s:75:"/var/www/bolt/vendor/symfony/http-kernel/EventListener/ProfilerListener.php";s:4:"line";i:138;s:6:"pretty";s:78:"Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelTerminate";}}}}s:6:"logger";C:62:"Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector":15987:{a:5:{s:11:"error_count";i:0;s:17:"deprecation_count";i:0;s:12:"scream_count";i:0;s:10:"priorities";a:2:{i:100;a:2:{s:5:"count";i:57;s:4:"name";s:5:"DEBUG";}i:200;a:2:{s:5:"count";i:3;s:4:"name";s:4:"INFO";}}s:4:"logs";a:60:{i:0;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:98:"Notified event "controller.mount" to listener "Bundle\Site\CustomisationExtension::onMountRoutes".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:1;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:103:"Notified event "controller.mount" to listener "Bundle\Site\CustomisationExtension::onMountControllers".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:2;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:56:"Notified event "controller.mount" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:3;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:104:"Notified event "controller.mount" to listener "Bolt\Provider\ControllerServiceProvider::onMountBackend".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:4;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:82:"Notified event "controller.mount" to listener "Bolt\Application::initMountpoints".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:5;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:105:"Notified event "controller.mount" to listener "Bolt\Provider\ControllerServiceProvider::onMountFrontend".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:6;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:98:"Notified event "controller.mount" to listener "Bundle\Site\CustomisationExtension::onMountRoutes".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:7;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:103:"Notified event "controller.mount" to listener "Bundle\Site\CustomisationExtension::onMountControllers".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:8;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:56:"Notified event "controller.mount" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:9;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:104:"Notified event "controller.mount" to listener "Bolt\Provider\ControllerServiceProvider::onMountBackend".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:10;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:56:"Notified event "controller.mount" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:11;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:82:"Notified event "controller.mount" to listener "Bolt\Application::initMountpoints".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:12;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:105:"Notified event "controller.mount" to listener "Bolt\Provider\ControllerServiceProvider::onMountFrontend".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:13;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:98:"Notified event "postHydrate" to listener "Bolt\EventListener\StorageEventListener::onPostHydrate".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:14;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:25:"Matched route "fileedit".";s:8:"priority";i:200;s:12:"priorityName";s:4:"INFO";s:7:"context";a:2:{s:16:"route_parameters";a:5:{s:11:"_controller";a:2:{i:0;s:43:"Object(Bolt\Controller\Backend\FileManager)";i:1;s:4:"edit";}s:9:"namespace";s:6:"config";s:4:"zone";s:7:"backend";s:4:"file";s:16:"contenttypes.yml";s:6:"_route";s:8:"fileedit";}s:11:"request_uri";s:97:"http://bolt.independent-tutorials.local/bolt/bolt/file/edit/config/contenttypes.yml?returnto=ajax";}s:7:"channel";s:4:"bolt";}i:15;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:65:"> POST /bolt/bolt/file/edit/config/contenttypes.yml?returnto=ajax";s:8:"priority";i:200;s:12:"priorityName";s:4:"INFO";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:16;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:122:"Notified event "kernel.request" to listener "Symfony\Component\HttpKernel\EventListener\DebugHandlersListener::configure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:17;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:123:"Notified event "kernel.request" to listener "Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:18;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:96:"Notified event "kernel.request" to listener "Bolt\EventListener\ConfigListener::onRequestEarly".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:19;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:86:"Notified event "kernel.request" to listener "Bolt\Session\SessionListener::onRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:20;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:96:"Notified event "kernel.request" to listener "Bolt\EventListener\FlashLoggerListener::onRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:21;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:91:"Notified event "kernel.request" to listener "Bolt\Profiler\DebugToolbarEnabler::onRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:22;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:123:"Notified event "kernel.request" to listener "Symfony\Component\HttpKernel\EventListener\FragmentListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:23;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:106:"Notified event "kernel.request" to listener "Bolt\Configuration\ConfigurationValueProxy::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:24;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:106:"Notified event "kernel.request" to listener "Bolt\Configuration\ConfigurationValueProxy::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:25;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:91:"Notified event "kernel.request" to listener "Bolt\EventListener\ConfigListener::onRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:26;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:121:"Notified event "kernel.request" to listener "Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:27;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:103:"Notified event "kernel.request" to listener "Bolt\EventListener\StorageEventListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:28;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:94:"Notified event "kernel.request" to listener "Bolt\EventListener\ZoneGuesser::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:29;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:80:"Notified event "kernel.request" to listener "Bolt\Routing\Canonical::onRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:30;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:98:"Notified event "kernel.request" to listener "Silex\EventListener\LocaleListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:31;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:104:"Notified event "kernel.request" to listener "Symfony\Component\Security\Http\Firewall::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:32;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:54:"Notified event "kernel.request" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:33;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:95:"Notified event "kernel.request" to listener "Silex\EventListener\LogListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:34;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:99:"Notified event "kernel.request" to listener "Bolt\EventListener\ProfilerListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:35;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:90:"Notified event "kernel.request" to listener "Bolt\EventListener\PagerListener::onRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:36;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:132:"Notified event "kernel.request" to listener "Bolt\ConfigurationNotices\EventListener\ConfigurationNoticesListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:37;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:102:"Notified event "kernel.request" to listener "Silex\EventListener\MiddlewareListener::onKernelRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:38;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:94:"Notified event "kernel.request" to listener "Bolt\EventListener\FlashLoggerListener::onEvent".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:39;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:107:"Notified event "kernel.controller" to listener "Silex\EventListener\ConverterListener::onKernelController".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:40;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:133:"Notified event "kernel.controller" to listener "Symfony\Component\HttpKernel\DataCollector\RequestDataCollector::onKernelController".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:41;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:5:"< 200";s:8:"priority";i:200;s:12:"priorityName";s:4:"INFO";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:42;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:95:"Notified event "kernel.response" to listener "Bolt\EventListener\FlashLoggerListener::onEvent".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:43;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:104:"Notified event "kernel.response" to listener "Silex\EventListener\MiddlewareListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:44;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:125:"Notified event "kernel.response" to listener "Symfony\Component\HttpKernel\EventListener\ResponseListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:45;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:55:"Notified event "kernel.response" to listener "closure".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:46;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:97:"Notified event "kernel.response" to listener "Silex\EventListener\LogListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:47;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:126:"Notified event "kernel.response" to listener "Symfony\Component\HttpKernel\EventListener\SurrogateListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:48;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:94:"Notified event "kernel.response" to listener "Bolt\EventListener\GeneralListener::onResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:49;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:107:"Notified event "kernel.response" to listener "Bolt\EventListener\DisableXssProtectionListener::onResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:50;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:94:"Notified event "kernel.response" to listener "Bolt\EventListener\SnippetListener::onResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:51;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:95:"Notified event "kernel.response" to listener "Bolt\EventListener\RedirectListener::onResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:52;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:95:"Notified event "kernel.response" to listener "Bolt\EventListener\FlashLoggerListener::onEvent".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:53;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:125:"Notified event "kernel.response" to listener "Symfony\Component\HttpKernel\EventListener\ProfilerListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:54;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:88:"Notified event "kernel.response" to listener "Bolt\Session\SessionListener::onResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:55;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:136:"Notified event "kernel.response" to listener "Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener::onKernelResponse".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:56;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:134:"Notified event "kernel.finish_request" to listener "Symfony\Component\HttpKernel\EventListener\RouterListener::onKernelFinishRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:57;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:111:"Notified event "kernel.finish_request" to listener "Silex\EventListener\LocaleListener::onKernelFinishRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:58;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:117:"Notified event "kernel.finish_request" to listener "Symfony\Component\Security\Http\Firewall::onKernelFinishRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}i:59;a:6:{s:9:"timestamp";i:1526934386;s:7:"message";s:93:"Notified event "kernel.finish_request" to listener "Bolt\Routing\Canonical::onFinishRequest".";s:8:"priority";i:100;s:12:"priorityName";s:5:"DEBUG";s:7:"context";a:0:{}s:7:"channel";s:4:"bolt";}}}}s:4:"time";C:60:"Symfony\Component\HttpKernel\DataCollector\TimeDataCollector":28941:{a:2:{s:10:"start_time";d:1526934386668;s:6:"events";a:40:{s:11:"__section__";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:2:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:0;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:69;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}i:1;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:70;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:72;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"default";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:14:"kernel.request";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:0;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:38;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:64:"Symfony\Component\HttpKernel\EventListener\DebugHandlersListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:0;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:0;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:59:"Symfony\Component\HttpKernel\EventListener\ProfilerListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:3:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:0;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:0;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}i:1;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:67;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:68;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}i:2;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:70;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:72;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:33:"Bolt\EventListener\ConfigListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:2:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:0;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:0;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}i:1;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:1;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:9;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:28:"Bolt\Session\SessionListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:2:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:0;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:1;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}i:1;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:68;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:69;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:38:"Bolt\EventListener\FlashLoggerListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:4:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:1;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:1;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}i:1;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:38;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:38;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}i:2;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:67;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:67;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}i:3;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:67;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:67;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:33:"Bolt\Profiler\DebugToolbarEnabler";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:1;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:1;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:59:"Symfony\Component\HttpKernel\EventListener\FragmentListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:1;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:1;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:42:"Bolt\Configuration\ConfigurationValueProxy";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:2:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:1;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:1;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}i:1;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:1;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:1;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:10:"preHydrate";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:8;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:8;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:11:"postHydrate";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:8;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:8;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:39:"Bolt\EventListener\StorageEventListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:2:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:8;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:8;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}i:1;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:10;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:36;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:57:"Symfony\Component\HttpKernel\EventListener\RouterListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:9;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:10;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:30:"Bolt\EventListener\ZoneGuesser";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:36;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:36;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:22:"Bolt\Routing\Canonical";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:36;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:36;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:34:"Silex\EventListener\LocaleListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:36;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:37;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:40:"Symfony\Component\Security\Http\Firewall";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:37;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:37;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:7:"Closure";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:3:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:37;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:37;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}i:1;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:67;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:67;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}i:2;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:70;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:70;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:31:"Silex\EventListener\LogListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:2:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:37;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:37;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}i:1;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:67;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:67;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:35:"Bolt\EventListener\ProfilerListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:37;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:37;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:32:"Bolt\EventListener\PagerListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:37;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:37;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:68:"Bolt\ConfigurationNotices\EventListener\ConfigurationNoticesListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:37;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:37;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:38:"Silex\EventListener\MiddlewareListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:2:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:37;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:38;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}i:1;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:67;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:67;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:19:"bolt.backend.before";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:37;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:38;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"default";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:20:"access.check.request";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:37;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:37;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:20:"access.check.success";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:38;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:38;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:17:"kernel.controller";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:40;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:40;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:37:"Silex\EventListener\ConverterListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:40;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:40;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:63:"Symfony\Component\HttpKernel\DataCollector\RequestDataCollector";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:40;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:40;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:2097152;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:10:"controller";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:40;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:67;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:15:"kernel.response";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:67;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:69;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:59:"Symfony\Component\HttpKernel\EventListener\ResponseListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:67;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:67;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:60:"Symfony\Component\HttpKernel\EventListener\SurrogateListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:67;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:67;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:34:"Bolt\EventListener\GeneralListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:67;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:67;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:47:"Bolt\EventListener\DisableXssProtectionListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:67;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:67;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:34:"Bolt\EventListener\SnippetListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:67;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:67;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:35:"Bolt\EventListener\RedirectListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:67;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:67;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:70:"Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:69;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:69;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:14:"event_listener";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}s:16:"kernel.terminate";O:42:"Symfony\Component\Stopwatch\StopwatchEvent":4:{s:51:" Symfony\Component\Stopwatch\StopwatchEvent periods";a:1:{i:0;O:43:"Symfony\Component\Stopwatch\StopwatchPeriod":3:{s:50:" Symfony\Component\Stopwatch\StopwatchPeriod start";i:70;s:48:" Symfony\Component\Stopwatch\StopwatchPeriod end";i:72;s:51:" Symfony\Component\Stopwatch\StopwatchPeriod memory";i:4194304;}}s:50:" Symfony\Component\Stopwatch\StopwatchEvent origin";d:1526934386697.2;s:52:" Symfony\Component\Stopwatch\StopwatchEvent category";s:7:"section";s:51:" Symfony\Component\Stopwatch\StopwatchEvent started";a:0:{}}}}}s:6:"router";C:62:"Symfony\Component\HttpKernel\DataCollector\RouterDataCollector":51:{a:3:{s:8:"redirect";b:0;s:3:"url";N;s:5:"route";N;}}s:6:"memory";C:62:"Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector":61:{a:2:{s:6:"memory";i:4194304;s:12:"memory_limit";i:134217728;}}s:4:"form";C:64:"Symfony\Component\Form\Extension\DataCollector\FormDataCollector":80049:{a:3:{s:5:"forms";a:1:{s:9:"file_edit";a:11:{s:2:"id";s:9:"file_edit";s:4:"name";s:9:"file_edit";s:4:"type";s:31:"Bolt\Form\FormType\FileEditType";s:10:"type_class";s:31:"Bolt\Form\FormType\FileEditType";s:12:"synchronized";s:4:"true";s:14:"passed_options";a:4:{s:20:"contents_allow_empty";s:5:"false";s:20:"contents_constraints";s:51:"[0 => Object(Bolt\Form\Validator\Constraints\Yaml)]";s:4:"data";s:12162:"[contents => # This file defines the contenttypes on the website. See the documentation for
# details: https://docs.bolt.cm/contenttypes/intro

# The Homepage contenttype is a singleton: There can be only one record of this
# contenttype.

homepage:
    name: Homepage
    singular_name: Homepage
    fields:
        title:
            type: text
            class: large
            group: content
            postfix: |
                The 'Homepage' can contain basic information about the website. This title will be
                shown on the homepage of the website, as the name implies. To change the
                <em><strong>name</strong></em> of the site, as is shown in the header, and the tab
                in the webbrowser, edit <code>sitename:</code> in the configuration file.
        image:
            type: image
            placeholder: https://source.unsplash.com/1920x640/?cityscape,landscape,nature/__random__
        teaser:
            type: html
            height: 150px
        content:
            type: html
            height: 300px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Homepage. This could either be an 'internal' link like <tt>page//about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        slug:
            type: slug
            uses: title
            group: meta
    viewless: true
    singleton: true
    default_status: published
    icon_many: "fa:home"
    icon_one: "fa:home"


# Pages can be used for the more 'static' pages on your site. This content-type
# has a 'templateselect' field, which allows you to override the record_template
# setting for an individual page.
# The taxonomy for this ContentType is defined as 'groups', which is a so-called
# "grouping taxonomy". This way you can easily group sets of pages that logically
# belong together. If your site has a 'services' section, in which you'd like to
# list the different types of services a company provides, you can group these
# together.

pages:
    name: Pages
    singular_name: Page
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        image:
            type: image
            placeholder: https://source.unsplash.com/1280x768/?business,workplace/__random__
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        template:
            type: templateselect
            filter: '*.twig'
    taxonomy: [ groups ]
    recordsperpage: 20


# Entries can be used for things like 'news' or 'blogpostings'. They have a
# 'teaser', which can be used for a short blurb on listing-pages, allowing
# visitors to click-through to the rest of the entry. It also has fields for an
# image and an optional video.
# A relation is defined to the pages ContentType. This way you can refer to a
# page from your news-item.
# This ContentType defines 'categories' and 'tags' as taxonomies, allowing the
# editor to use both to categorize a specific entry.
# The 'sort' is set to '-datepublish', which means that newer entries will be
# shown above older entries.

entries:
    name: Entries
    singular_name: Entry
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        image:
            type: image
            group: media
            placeholder: https://source.unsplash.com/1280x768/?business,workspace,interior/__random__
        video:
            type: video
    relations:
        pages:
          multiple: false
          order: title
          label: Select a page
    taxonomy: [ categories, tags ]
    record_template: entry.twig
    listing_template: listing.twig
    listing_records: 10
    default_status: published
    sort: -datepublish
    recordsperpage: 20


# The 'Showcases' is not particularly useful in most cases, but it does a good
# job of showcasing most of the available fieldtypes. Feel free to delete it, or
# copy some fields to your own ContentTypes.
# Since no templates are defined for this ContentType, the default record_template,
# listing_template, and related settings are used from config.yml

showcases:
    name: Showcases
    slug: showcases
    singular_name: Showcase
    singular_slug: showcase
    fields:
        title:
            type: text
            class: large
            required: true
            pattern: ".{2,255}" # see: http://html5pattern.com/
            error: "The Title field is required, and must contain at least 2 characters"
            group: Text
        slug:
            type: slug
            uses: [ title ]
        html:
            type: html
            height: 150px
        textarea:
            type: textarea
            postfix: "<p><em>This is a plain text area. the contents will not be processed.</em></p>"
        markdown:
            type: markdown
            postfix: "<p><em>This field gets parsed as <a href='https://help.github.com/articles/markdown-basics'>Markdown</a>, when rendered on the site.</em></p>"
        geolocation:
            type: geolocation
            group: Media
        embed:
            type: embed
        video:
            type: video
        image:
            type: image
            attrib: title # Note: retrieve this in your template with {{ record.values.image.title }}
            extensions: [ gif, jpg, png ]
            placeholder: https://source.unsplash.com/1280x768/?animal,koala,kitten,puppy,cute/__random__
        imagelist:
            type: imagelist
        file:
            type: file
            group: files
        filelist:
            type: filelist
        checkbox:
            type: checkbox
            label: "This is a checkbox"
            group: other
        datetime:
            type: datetime
            default: "2000-01-01"
            variant: inline
        date:
            type: date
            default: "first day of last month"
            variant: inline
        integerfield:
            type: integer
            index: true
        floatfield:
            type: float
        selectfield:
            type: select
            values: [ foo, bar, baz ]
        multiselect:
            type: select
            values: [ A-tuin, Donatello, Rafael, Leonardo, Michelangelo, Koopa, Squirtle ]
            multiple: true
            postfix: "Select your favourite turtle(s)."
        selectentry:
            type: select
            values: entries/id,title
            postfix: "Select an entry"
            autocomplete: true
            sort: title
        repeater:
            type: repeater
            group: repeater
            limit: 3
            prefix: "<p>This allows you to create multiple sets of fields. Use the add button at the bottom to create a new empty set.</p>"
            fields:
                repeattitle:
                    type: text
                repeatimage:
                    type: image
                    extensions: [ gif, jpg, png ]
                repeatcontent:
                    type: html
    relations:
        entries:
            multiple: false
            label: "Choose an entry"
            order: -id
            format: "{{ item.title|escape }} (№ {{ item.id }})"
            postfix: "By selecting an Entry, you're creating a bi-directional relationship to that Entry."
        pages:
            multiple: true
            order: title
            label: Select zero or more pages
    taxonomy: [ categories, tags ]
    show_on_dashboard: true
    default_status: published
    searchable: true
    icon_many: "fa:gift"
    icon_one: "fa:gift"


# The 'Blocks' ContentType is a so-called 'resource ContentType'. This means
# that it can be used to manage smaller pieces of content, like the 'about us'
# text, an 'our address' in the footer, or similar short blurbs of text.
# For more info, see: https://docs.bolt.cm/howto/resource-contenttype

blocks:
    name: Blocks
    singular_name: Block
    fields:
        title:
            type: text
            class: large
            group: "Block"
        slug:
            type: slug
            uses: [ title ]
        content:
            type: html
            height: 150px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Block. This could either be an 'internal' link like <tt>page/about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        image:
            type: image
            attrib: title
            extensions: [ gif, jpg, png ]
    show_on_dashboard: true
    viewless: true
    default_status: published
    searchable: false
    icon_many: "fa:cubes"
    icon_one: "fa:cube"

# Possible field types:
#
# text - varchar(256) - input type text.
# integer - integer - Input field for integer numbers.
# float - double - Input field for floating numbers, stored as 'Double'.
# geolocation - text (65kb) - Input field for geolocation. Enter an address, and the location is geocoded to latitude/longitude coordinates
# imagelist - text (65kb) - Input type for imagelists. Add multiple images with a description. Useful for image sliders, galleries, etcetera.
# image - varchar(256) - image select/upload widget, stored as filename.
# file - varchar(256) - file select/upload widget, stored as filename.
# filelist - text (65kb) - Input type for a list of files. Including a description.
# video - varchar(256) - Video embed widget, stored as filename.
# html - text (65kb) - wysiwyg element.
# textarea - varchar(32768) - Simple, plain < textarea > field.
# markdown - varchar(32768) - Simple, plain < textarea > field, which is parsed as Markdown text.
# datetime - datetime - date and time selector widget.
# date - datetime - date selector widget.
# select - varchar(256) - select with predefined values
# templateselect - varchar(256) - select with template filenames
# checkbox - integer - checkbox-field which is 1 (checked) or 0 (unchecked)

# Using YAML repeated nodes
#
# YAML allows the defining of "repeated nodes". These allow you to define a 'node'
# with a 'key: &name' and referenced later with '<<: *name'
#
# Bolt allows you to define this with the special entry of '__nodes:' that itself
# won't create a ContentType, but will allow you to use it in actual ContentTypes
# to prevent repeating yourself.
#
# To achieve this, first create a key '__nodes:'
#__nodes:
#    field_defaults: &field_defaults
#        title:
#            type: text
#            class: large
#            group: main
#        slug:
#            type: slug
#            uses: title
#    template_defaults: &template_defaults
#        template:
#            type: templateselect
#            filter: '*.twig'
#            group: meta
#
# Then, as an example, you could create a ContentType with default fields, with
# an additional 'image' field.
#
#contenttype_abc:
#    name: ContentType Abc
#    fields:
#        <<: *field_defaults
#        image:
#            type: image
#            attrib: title
#            extensions: [ gif, jpg, png ]
#        <<: *template_defaults
#    taxonomy: [ chapters ]
#    recordsperpage: 10
#
# Alternatively, or additionally, you then can then create a ContentType with
# default fields, and a 'select' field, and a different 'templateselect' option.
#
#contenttype_xyz:
#    name: ContentType Xyz
#    fields:
#        <<: *field_defaults
#        selectfield:
#            type: select
#            values: [ none, foo, bar ]
#        template:
#            type: templateselect
#            filter: '*_xyz.twig'
#    taxonomy: [ tags ]
#    recordsperpage: 20
]";s:13:"write_allowed";s:4:"true";}s:16:"resolved_options";a:45:{s:6:"action";s:0:"";s:18:"allow_extra_fields";s:5:"false";s:4:"attr";s:2:"[]";s:15:"auto_initialize";s:4:"true";s:10:"block_name";s:4:"null";s:12:"by_reference";s:4:"true";s:18:"cascade_validation";s:5:"false";s:8:"compound";s:4:"true";s:11:"constraints";s:2:"[]";s:20:"contents_allow_empty";s:5:"false";s:20:"contents_constraints";s:114:"[0 => Object(Bolt\Form\Validator\Constraints\Yaml), 1 => Object(Symfony\Component\Validator\Constraints\NotBlank)]";s:15:"csrf_field_name";s:6:"_token";s:12:"csrf_message";s:59:"The CSRF token is invalid. Please try to resubmit the form.";s:15:"csrf_protection";s:4:"true";s:13:"csrf_provider";s:56:"Object(Symfony\Component\Security\Csrf\CsrfTokenManager)";s:13:"csrf_token_id";s:4:"null";s:18:"csrf_token_manager";s:56:"Object(Symfony\Component\Security\Csrf\CsrfTokenManager)";s:4:"data";s:12162:"[contents => # This file defines the contenttypes on the website. See the documentation for
# details: https://docs.bolt.cm/contenttypes/intro

# The Homepage contenttype is a singleton: There can be only one record of this
# contenttype.

homepage:
    name: Homepage
    singular_name: Homepage
    fields:
        title:
            type: text
            class: large
            group: content
            postfix: |
                The 'Homepage' can contain basic information about the website. This title will be
                shown on the homepage of the website, as the name implies. To change the
                <em><strong>name</strong></em> of the site, as is shown in the header, and the tab
                in the webbrowser, edit <code>sitename:</code> in the configuration file.
        image:
            type: image
            placeholder: https://source.unsplash.com/1920x640/?cityscape,landscape,nature/__random__
        teaser:
            type: html
            height: 150px
        content:
            type: html
            height: 300px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Homepage. This could either be an 'internal' link like <tt>page//about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        slug:
            type: slug
            uses: title
            group: meta
    viewless: true
    singleton: true
    default_status: published
    icon_many: "fa:home"
    icon_one: "fa:home"


# Pages can be used for the more 'static' pages on your site. This content-type
# has a 'templateselect' field, which allows you to override the record_template
# setting for an individual page.
# The taxonomy for this ContentType is defined as 'groups', which is a so-called
# "grouping taxonomy". This way you can easily group sets of pages that logically
# belong together. If your site has a 'services' section, in which you'd like to
# list the different types of services a company provides, you can group these
# together.

pages:
    name: Pages
    singular_name: Page
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        image:
            type: image
            placeholder: https://source.unsplash.com/1280x768/?business,workplace/__random__
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        template:
            type: templateselect
            filter: '*.twig'
    taxonomy: [ groups ]
    recordsperpage: 20


# Entries can be used for things like 'news' or 'blogpostings'. They have a
# 'teaser', which can be used for a short blurb on listing-pages, allowing
# visitors to click-through to the rest of the entry. It also has fields for an
# image and an optional video.
# A relation is defined to the pages ContentType. This way you can refer to a
# page from your news-item.
# This ContentType defines 'categories' and 'tags' as taxonomies, allowing the
# editor to use both to categorize a specific entry.
# The 'sort' is set to '-datepublish', which means that newer entries will be
# shown above older entries.

entries:
    name: Entries
    singular_name: Entry
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        image:
            type: image
            group: media
            placeholder: https://source.unsplash.com/1280x768/?business,workspace,interior/__random__
        video:
            type: video
    relations:
        pages:
          multiple: false
          order: title
          label: Select a page
    taxonomy: [ categories, tags ]
    record_template: entry.twig
    listing_template: listing.twig
    listing_records: 10
    default_status: published
    sort: -datepublish
    recordsperpage: 20


# The 'Showcases' is not particularly useful in most cases, but it does a good
# job of showcasing most of the available fieldtypes. Feel free to delete it, or
# copy some fields to your own ContentTypes.
# Since no templates are defined for this ContentType, the default record_template,
# listing_template, and related settings are used from config.yml

showcases:
    name: Showcases
    slug: showcases
    singular_name: Showcase
    singular_slug: showcase
    fields:
        title:
            type: text
            class: large
            required: true
            pattern: ".{2,255}" # see: http://html5pattern.com/
            error: "The Title field is required, and must contain at least 2 characters"
            group: Text
        slug:
            type: slug
            uses: [ title ]
        html:
            type: html
            height: 150px
        textarea:
            type: textarea
            postfix: "<p><em>This is a plain text area. the contents will not be processed.</em></p>"
        markdown:
            type: markdown
            postfix: "<p><em>This field gets parsed as <a href='https://help.github.com/articles/markdown-basics'>Markdown</a>, when rendered on the site.</em></p>"
        geolocation:
            type: geolocation
            group: Media
        embed:
            type: embed
        video:
            type: video
        image:
            type: image
            attrib: title # Note: retrieve this in your template with {{ record.values.image.title }}
            extensions: [ gif, jpg, png ]
            placeholder: https://source.unsplash.com/1280x768/?animal,koala,kitten,puppy,cute/__random__
        imagelist:
            type: imagelist
        file:
            type: file
            group: files
        filelist:
            type: filelist
        checkbox:
            type: checkbox
            label: "This is a checkbox"
            group: other
        datetime:
            type: datetime
            default: "2000-01-01"
            variant: inline
        date:
            type: date
            default: "first day of last month"
            variant: inline
        integerfield:
            type: integer
            index: true
        floatfield:
            type: float
        selectfield:
            type: select
            values: [ foo, bar, baz ]
        multiselect:
            type: select
            values: [ A-tuin, Donatello, Rafael, Leonardo, Michelangelo, Koopa, Squirtle ]
            multiple: true
            postfix: "Select your favourite turtle(s)."
        selectentry:
            type: select
            values: entries/id,title
            postfix: "Select an entry"
            autocomplete: true
            sort: title
        repeater:
            type: repeater
            group: repeater
            limit: 3
            prefix: "<p>This allows you to create multiple sets of fields. Use the add button at the bottom to create a new empty set.</p>"
            fields:
                repeattitle:
                    type: text
                repeatimage:
                    type: image
                    extensions: [ gif, jpg, png ]
                repeatcontent:
                    type: html
    relations:
        entries:
            multiple: false
            label: "Choose an entry"
            order: -id
            format: "{{ item.title|escape }} (№ {{ item.id }})"
            postfix: "By selecting an Entry, you're creating a bi-directional relationship to that Entry."
        pages:
            multiple: true
            order: title
            label: Select zero or more pages
    taxonomy: [ categories, tags ]
    show_on_dashboard: true
    default_status: published
    searchable: true
    icon_many: "fa:gift"
    icon_one: "fa:gift"


# The 'Blocks' ContentType is a so-called 'resource ContentType'. This means
# that it can be used to manage smaller pieces of content, like the 'about us'
# text, an 'our address' in the footer, or similar short blurbs of text.
# For more info, see: https://docs.bolt.cm/howto/resource-contenttype

blocks:
    name: Blocks
    singular_name: Block
    fields:
        title:
            type: text
            class: large
            group: "Block"
        slug:
            type: slug
            uses: [ title ]
        content:
            type: html
            height: 150px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Block. This could either be an 'internal' link like <tt>page/about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        image:
            type: image
            attrib: title
            extensions: [ gif, jpg, png ]
    show_on_dashboard: true
    viewless: true
    default_status: published
    searchable: false
    icon_many: "fa:cubes"
    icon_one: "fa:cube"

# Possible field types:
#
# text - varchar(256) - input type text.
# integer - integer - Input field for integer numbers.
# float - double - Input field for floating numbers, stored as 'Double'.
# geolocation - text (65kb) - Input field for geolocation. Enter an address, and the location is geocoded to latitude/longitude coordinates
# imagelist - text (65kb) - Input type for imagelists. Add multiple images with a description. Useful for image sliders, galleries, etcetera.
# image - varchar(256) - image select/upload widget, stored as filename.
# file - varchar(256) - file select/upload widget, stored as filename.
# filelist - text (65kb) - Input type for a list of files. Including a description.
# video - varchar(256) - Video embed widget, stored as filename.
# html - text (65kb) - wysiwyg element.
# textarea - varchar(32768) - Simple, plain < textarea > field.
# markdown - varchar(32768) - Simple, plain < textarea > field, which is parsed as Markdown text.
# datetime - datetime - date and time selector widget.
# date - datetime - date selector widget.
# select - varchar(256) - select with predefined values
# templateselect - varchar(256) - select with template filenames
# checkbox - integer - checkbox-field which is 1 (checked) or 0 (unchecked)

# Using YAML repeated nodes
#
# YAML allows the defining of "repeated nodes". These allow you to define a 'node'
# with a 'key: &name' and referenced later with '<<: *name'
#
# Bolt allows you to define this with the special entry of '__nodes:' that itself
# won't create a ContentType, but will allow you to use it in actual ContentTypes
# to prevent repeating yourself.
#
# To achieve this, first create a key '__nodes:'
#__nodes:
#    field_defaults: &field_defaults
#        title:
#            type: text
#            class: large
#            group: main
#        slug:
#            type: slug
#            uses: title
#    template_defaults: &template_defaults
#        template:
#            type: templateselect
#            filter: '*.twig'
#            group: meta
#
# Then, as an example, you could create a ContentType with default fields, with
# an additional 'image' field.
#
#contenttype_abc:
#    name: ContentType Abc
#    fields:
#        <<: *field_defaults
#        image:
#            type: image
#            attrib: title
#            extensions: [ gif, jpg, png ]
#        <<: *template_defaults
#    taxonomy: [ chapters ]
#    recordsperpage: 10
#
# Alternatively, or additionally, you then can then create a ContentType with
# default fields, and a 'select' field, and a different 'templateselect' option.
#
#contenttype_xyz:
#    name: ContentType Xyz
#    fields:
#        <<: *field_defaults
#        selectfield:
#            type: select
#            values: [ none, foo, bar ]
#        template:
#            type: templateselect
#            filter: '*_xyz.twig'
#    taxonomy: [ tags ]
#    recordsperpage: 20
]";s:10:"data_class";s:4:"null";s:8:"disabled";s:5:"false";s:10:"empty_data";s:15:"Object(Closure)";s:14:"error_bubbling";s:4:"true";s:13:"error_mapping";s:2:"[]";s:20:"extra_fields_message";s:42:"This form should not contain extra fields.";s:12:"inherit_data";s:5:"false";s:9:"intention";s:4:"null";s:15:"invalid_message";s:24:"This value is not valid.";s:26:"invalid_message_parameters";s:2:"[]";s:5:"label";s:4:"null";s:10:"label_attr";s:2:"[]";s:12:"label_format";s:4:"null";s:6:"mapped";s:4:"true";s:10:"max_length";s:4:"null";s:6:"method";s:4:"POST";s:7:"pattern";s:4:"null";s:21:"post_max_size_message";s:69:"The uploaded file was too large. Please try to upload a smaller file.";s:13:"property_path";s:4:"null";s:9:"read_only";s:5:"false";s:8:"required";s:4:"true";s:18:"translation_domain";s:4:"null";s:4:"trim";s:4:"true";s:23:"upload_max_size_message";s:15:"Object(Closure)";s:17:"validation_groups";s:4:"null";s:7:"virtual";s:4:"null";s:13:"write_allowed";s:4:"true";}s:12:"default_data";a:1:{s:4:"norm";s:12162:"[contents => # This file defines the contenttypes on the website. See the documentation for
# details: https://docs.bolt.cm/contenttypes/intro

# The Homepage contenttype is a singleton: There can be only one record of this
# contenttype.

homepage:
    name: Homepage
    singular_name: Homepage
    fields:
        title:
            type: text
            class: large
            group: content
            postfix: |
                The 'Homepage' can contain basic information about the website. This title will be
                shown on the homepage of the website, as the name implies. To change the
                <em><strong>name</strong></em> of the site, as is shown in the header, and the tab
                in the webbrowser, edit <code>sitename:</code> in the configuration file.
        image:
            type: image
            placeholder: https://source.unsplash.com/1920x640/?cityscape,landscape,nature/__random__
        teaser:
            type: html
            height: 150px
        content:
            type: html
            height: 300px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Homepage. This could either be an 'internal' link like <tt>page//about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        slug:
            type: slug
            uses: title
            group: meta
    viewless: true
    singleton: true
    default_status: published
    icon_many: "fa:home"
    icon_one: "fa:home"


# Pages can be used for the more 'static' pages on your site. This content-type
# has a 'templateselect' field, which allows you to override the record_template
# setting for an individual page.
# The taxonomy for this ContentType is defined as 'groups', which is a so-called
# "grouping taxonomy". This way you can easily group sets of pages that logically
# belong together. If your site has a 'services' section, in which you'd like to
# list the different types of services a company provides, you can group these
# together.

pages:
    name: Pages
    singular_name: Page
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        image:
            type: image
            placeholder: https://source.unsplash.com/1280x768/?business,workplace/__random__
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        template:
            type: templateselect
            filter: '*.twig'
    taxonomy: [ groups ]
    recordsperpage: 20


# Entries can be used for things like 'news' or 'blogpostings'. They have a
# 'teaser', which can be used for a short blurb on listing-pages, allowing
# visitors to click-through to the rest of the entry. It also has fields for an
# image and an optional video.
# A relation is defined to the pages ContentType. This way you can refer to a
# page from your news-item.
# This ContentType defines 'categories' and 'tags' as taxonomies, allowing the
# editor to use both to categorize a specific entry.
# The 'sort' is set to '-datepublish', which means that newer entries will be
# shown above older entries.

entries:
    name: Entries
    singular_name: Entry
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        image:
            type: image
            group: media
            placeholder: https://source.unsplash.com/1280x768/?business,workspace,interior/__random__
        video:
            type: video
    relations:
        pages:
          multiple: false
          order: title
          label: Select a page
    taxonomy: [ categories, tags ]
    record_template: entry.twig
    listing_template: listing.twig
    listing_records: 10
    default_status: published
    sort: -datepublish
    recordsperpage: 20


# The 'Showcases' is not particularly useful in most cases, but it does a good
# job of showcasing most of the available fieldtypes. Feel free to delete it, or
# copy some fields to your own ContentTypes.
# Since no templates are defined for this ContentType, the default record_template,
# listing_template, and related settings are used from config.yml

showcases:
    name: Showcases
    slug: showcases
    singular_name: Showcase
    singular_slug: showcase
    fields:
        title:
            type: text
            class: large
            required: true
            pattern: ".{2,255}" # see: http://html5pattern.com/
            error: "The Title field is required, and must contain at least 2 characters"
            group: Text
        slug:
            type: slug
            uses: [ title ]
        html:
            type: html
            height: 150px
        textarea:
            type: textarea
            postfix: "<p><em>This is a plain text area. the contents will not be processed.</em></p>"
        markdown:
            type: markdown
            postfix: "<p><em>This field gets parsed as <a href='https://help.github.com/articles/markdown-basics'>Markdown</a>, when rendered on the site.</em></p>"
        geolocation:
            type: geolocation
            group: Media
        embed:
            type: embed
        video:
            type: video
        image:
            type: image
            attrib: title # Note: retrieve this in your template with {{ record.values.image.title }}
            extensions: [ gif, jpg, png ]
            placeholder: https://source.unsplash.com/1280x768/?animal,koala,kitten,puppy,cute/__random__
        imagelist:
            type: imagelist
        file:
            type: file
            group: files
        filelist:
            type: filelist
        checkbox:
            type: checkbox
            label: "This is a checkbox"
            group: other
        datetime:
            type: datetime
            default: "2000-01-01"
            variant: inline
        date:
            type: date
            default: "first day of last month"
            variant: inline
        integerfield:
            type: integer
            index: true
        floatfield:
            type: float
        selectfield:
            type: select
            values: [ foo, bar, baz ]
        multiselect:
            type: select
            values: [ A-tuin, Donatello, Rafael, Leonardo, Michelangelo, Koopa, Squirtle ]
            multiple: true
            postfix: "Select your favourite turtle(s)."
        selectentry:
            type: select
            values: entries/id,title
            postfix: "Select an entry"
            autocomplete: true
            sort: title
        repeater:
            type: repeater
            group: repeater
            limit: 3
            prefix: "<p>This allows you to create multiple sets of fields. Use the add button at the bottom to create a new empty set.</p>"
            fields:
                repeattitle:
                    type: text
                repeatimage:
                    type: image
                    extensions: [ gif, jpg, png ]
                repeatcontent:
                    type: html
    relations:
        entries:
            multiple: false
            label: "Choose an entry"
            order: -id
            format: "{{ item.title|escape }} (№ {{ item.id }})"
            postfix: "By selecting an Entry, you're creating a bi-directional relationship to that Entry."
        pages:
            multiple: true
            order: title
            label: Select zero or more pages
    taxonomy: [ categories, tags ]
    show_on_dashboard: true
    default_status: published
    searchable: true
    icon_many: "fa:gift"
    icon_one: "fa:gift"


# The 'Blocks' ContentType is a so-called 'resource ContentType'. This means
# that it can be used to manage smaller pieces of content, like the 'about us'
# text, an 'our address' in the footer, or similar short blurbs of text.
# For more info, see: https://docs.bolt.cm/howto/resource-contenttype

blocks:
    name: Blocks
    singular_name: Block
    fields:
        title:
            type: text
            class: large
            group: "Block"
        slug:
            type: slug
            uses: [ title ]
        content:
            type: html
            height: 150px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Block. This could either be an 'internal' link like <tt>page/about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        image:
            type: image
            attrib: title
            extensions: [ gif, jpg, png ]
    show_on_dashboard: true
    viewless: true
    default_status: published
    searchable: false
    icon_many: "fa:cubes"
    icon_one: "fa:cube"

# Possible field types:
#
# text - varchar(256) - input type text.
# integer - integer - Input field for integer numbers.
# float - double - Input field for floating numbers, stored as 'Double'.
# geolocation - text (65kb) - Input field for geolocation. Enter an address, and the location is geocoded to latitude/longitude coordinates
# imagelist - text (65kb) - Input type for imagelists. Add multiple images with a description. Useful for image sliders, galleries, etcetera.
# image - varchar(256) - image select/upload widget, stored as filename.
# file - varchar(256) - file select/upload widget, stored as filename.
# filelist - text (65kb) - Input type for a list of files. Including a description.
# video - varchar(256) - Video embed widget, stored as filename.
# html - text (65kb) - wysiwyg element.
# textarea - varchar(32768) - Simple, plain < textarea > field.
# markdown - varchar(32768) - Simple, plain < textarea > field, which is parsed as Markdown text.
# datetime - datetime - date and time selector widget.
# date - datetime - date selector widget.
# select - varchar(256) - select with predefined values
# templateselect - varchar(256) - select with template filenames
# checkbox - integer - checkbox-field which is 1 (checked) or 0 (unchecked)

# Using YAML repeated nodes
#
# YAML allows the defining of "repeated nodes". These allow you to define a 'node'
# with a 'key: &name' and referenced later with '<<: *name'
#
# Bolt allows you to define this with the special entry of '__nodes:' that itself
# won't create a ContentType, but will allow you to use it in actual ContentTypes
# to prevent repeating yourself.
#
# To achieve this, first create a key '__nodes:'
#__nodes:
#    field_defaults: &field_defaults
#        title:
#            type: text
#            class: large
#            group: main
#        slug:
#            type: slug
#            uses: title
#    template_defaults: &template_defaults
#        template:
#            type: templateselect
#            filter: '*.twig'
#            group: meta
#
# Then, as an example, you could create a ContentType with default fields, with
# an additional 'image' field.
#
#contenttype_abc:
#    name: ContentType Abc
#    fields:
#        <<: *field_defaults
#        image:
#            type: image
#            attrib: title
#            extensions: [ gif, jpg, png ]
#        <<: *template_defaults
#    taxonomy: [ chapters ]
#    recordsperpage: 10
#
# Alternatively, or additionally, you then can then create a ContentType with
# default fields, and a 'select' field, and a different 'templateselect' option.
#
#contenttype_xyz:
#    name: ContentType Xyz
#    fields:
#        <<: *field_defaults
#        selectfield:
#            type: select
#            values: [ none, foo, bar ]
#        template:
#            type: templateselect
#            filter: '*_xyz.twig'
#    taxonomy: [ tags ]
#    recordsperpage: 20
]";}s:14:"submitted_data";a:1:{s:4:"norm";s:12542:"[contents => # This file defines the contenttypes on the website. See the documentation for
# details: https://docs.bolt.cm/contenttypes/intro

# The Homepage contenttype is a singleton: There can be only one record of this
# contenttype.

homepage:
    name: Homepage
    singular_name: Homepage
    fields:
        title:
            type: text
            class: large
            group: content
            postfix: |
                The 'Homepage' can contain basic information about the website. This title will be
                shown on the homepage of the website, as the name implies. To change the
                <em><strong>name</strong></em> of the site, as is shown in the header, and the tab
                in the webbrowser, edit <code>sitename:</code> in the configuration file.
        image:
            type: image
            placeholder: https://source.unsplash.com/1920x640/?cityscape,landscape,nature/__random__
        teaser:
            type: html
            height: 150px
        content:
            type: html
            height: 300px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Homepage. This could either be an 'internal' link like <tt>page//about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        slug:
            type: slug
            uses: title
            group: meta
    viewless: true
    singleton: true
    default_status: published
    icon_many: "fa:home"
    icon_one: "fa:home"


# Pages can be used for the more 'static' pages on your site. This content-type
# has a 'templateselect' field, which allows you to override the record_template
# setting for an individual page.
# The taxonomy for this ContentType is defined as 'groups', which is a so-called
# "grouping taxonomy". This way you can easily group sets of pages that logically
# belong together. If your site has a 'services' section, in which you'd like to
# list the different types of services a company provides, you can group these
# together.

pages:
    name: Pages
    singular_name: Page
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        image:
            type: image
            placeholder: https://source.unsplash.com/1280x768/?business,workplace/__random__
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        template:
            type: templateselect
            filter: '*.twig'
    default_status: published
    taxonomy: [ groups ]
    recordsperpage: 20


# Entries can be used for things like 'news' or 'blogpostings'. They have a
# 'teaser', which can be used for a short blurb on listing-pages, allowing
# visitors to click-through to the rest of the entry. It also has fields for an
# image and an optional video.
# A relation is defined to the pages ContentType. This way you can refer to a
# page from your news-item.
# This ContentType defines 'categories' and 'tags' as taxonomies, allowing the
# editor to use both to categorize a specific entry.
# The 'sort' is set to '-datepublish', which means that newer entries will be
# shown above older entries.

entries:
    name: Entries
    singular_name: Entry
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        image:
            type: image
            group: media
            placeholder: https://source.unsplash.com/1280x768/?business,workspace,interior/__random__
        video:
            type: video
    relations:
        pages:
          multiple: false
          order: title
          label: Select a page
    taxonomy: [ categories, tags ]
    record_template: entry.twig
    listing_template: listing.twig
    listing_records: 10
    default_status: published
    sort: -datepublish
    recordsperpage: 20


# The 'Showcases' is not particularly useful in most cases, but it does a good
# job of showcasing most of the available fieldtypes. Feel free to delete it, or
# copy some fields to your own ContentTypes.
# Since no templates are defined for this ContentType, the default record_template,
# listing_template, and related settings are used from config.yml

showcases:
    name: Showcases
    slug: showcases
    singular_name: Showcase
    singular_slug: showcase
    fields:
        title:
            type: text
            class: large
            required: true
            pattern: ".{2,255}" # see: http://html5pattern.com/
            error: "The Title field is required, and must contain at least 2 characters"
            group: Text
        slug:
            type: slug
            uses: [ title ]
        html:
            type: html
            height: 150px
        textarea:
            type: textarea
            postfix: "<p><em>This is a plain text area. the contents will not be processed.</em></p>"
        markdown:
            type: markdown
            postfix: "<p><em>This field gets parsed as <a href='https://help.github.com/articles/markdown-basics'>Markdown</a>, when rendered on the site.</em></p>"
        geolocation:
            type: geolocation
            group: Media
        embed:
            type: embed
        video:
            type: video
        image:
            type: image
            attrib: title # Note: retrieve this in your template with {{ record.values.image.title }}
            extensions: [ gif, jpg, png ]
            placeholder: https://source.unsplash.com/1280x768/?animal,koala,kitten,puppy,cute/__random__
        imagelist:
            type: imagelist
        file:
            type: file
            group: files
        filelist:
            type: filelist
        checkbox:
            type: checkbox
            label: "This is a checkbox"
            group: other
        datetime:
            type: datetime
            default: "2000-01-01"
            variant: inline
        date:
            type: date
            default: "first day of last month"
            variant: inline
        integerfield:
            type: integer
            index: true
        floatfield:
            type: float
        selectfield:
            type: select
            values: [ foo, bar, baz ]
        multiselect:
            type: select
            values: [ A-tuin, Donatello, Rafael, Leonardo, Michelangelo, Koopa, Squirtle ]
            multiple: true
            postfix: "Select your favourite turtle(s)."
        selectentry:
            type: select
            values: entries/id,title
            postfix: "Select an entry"
            autocomplete: true
            sort: title
        repeater:
            type: repeater
            group: repeater
            limit: 3
            prefix: "<p>This allows you to create multiple sets of fields. Use the add button at the bottom to create a new empty set.</p>"
            fields:
                repeattitle:
                    type: text
                repeatimage:
                    type: image
                    extensions: [ gif, jpg, png ]
                repeatcontent:
                    type: html
    relations:
        entries:
            multiple: false
            label: "Choose an entry"
            order: -id
            format: "{{ item.title|escape }} (№ {{ item.id }})"
            postfix: "By selecting an Entry, you're creating a bi-directional relationship to that Entry."
        pages:
            multiple: true
            order: title
            label: Select zero or more pages
    taxonomy: [ categories, tags ]
    show_on_dashboard: true
    default_status: published
    searchable: true
    icon_many: "fa:gift"
    icon_one: "fa:gift"


# The 'Blocks' ContentType is a so-called 'resource ContentType'. This means
# that it can be used to manage smaller pieces of content, like the 'about us'
# text, an 'our address' in the footer, or similar short blurbs of text.
# For more info, see: https://docs.bolt.cm/howto/resource-contenttype

blocks:
    name: Blocks
    singular_name: Block
    fields:
        title:
            type: text
            class: large
            group: "Block"
        slug:
            type: slug
            uses: [ title ]
        content:
            type: html
            height: 150px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Block. This could either be an 'internal' link like <tt>page/about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        image:
            type: image
            attrib: title
            extensions: [ gif, jpg, png ]
    show_on_dashboard: true
    viewless: true
    default_status: published
    searchable: false
    icon_many: "fa:cubes"
    icon_one: "fa:cube"

# Possible field types:
#
# text - varchar(256) - input type text.
# integer - integer - Input field for integer numbers.
# float - double - Input field for floating numbers, stored as 'Double'.
# geolocation - text (65kb) - Input field for geolocation. Enter an address, and the location is geocoded to latitude/longitude coordinates
# imagelist - text (65kb) - Input type for imagelists. Add multiple images with a description. Useful for image sliders, galleries, etcetera.
# image - varchar(256) - image select/upload widget, stored as filename.
# file - varchar(256) - file select/upload widget, stored as filename.
# filelist - text (65kb) - Input type for a list of files. Including a description.
# video - varchar(256) - Video embed widget, stored as filename.
# html - text (65kb) - wysiwyg element.
# textarea - varchar(32768) - Simple, plain < textarea > field.
# markdown - varchar(32768) - Simple, plain < textarea > field, which is parsed as Markdown text.
# datetime - datetime - date and time selector widget.
# date - datetime - date selector widget.
# select - varchar(256) - select with predefined values
# templateselect - varchar(256) - select with template filenames
# checkbox - integer - checkbox-field which is 1 (checked) or 0 (unchecked)

# Using YAML repeated nodes
#
# YAML allows the defining of "repeated nodes". These allow you to define a 'node'
# with a 'key: &name' and referenced later with '<<: *name'
#
# Bolt allows you to define this with the special entry of '__nodes:' that itself
# won't create a ContentType, but will allow you to use it in actual ContentTypes
# to prevent repeating yourself.
#
# To achieve this, first create a key '__nodes:'
#__nodes:
#    field_defaults: &field_defaults
#        title:
#            type: text
#            class: large
#            group: main
#        slug:
#            type: slug
#            uses: title
#    template_defaults: &template_defaults
#        template:
#            type: templateselect
#            filter: '*.twig'
#            group: meta
#
# Then, as an example, you could create a ContentType with default fields, with
# an additional 'image' field.
#
#contenttype_abc:
#    name: ContentType Abc
#    fields:
#        <<: *field_defaults
#        image:
#            type: image
#            attrib: title
#            extensions: [ gif, jpg, png ]
#        <<: *template_defaults
#    taxonomy: [ chapters ]
#    recordsperpage: 10
#
# Alternatively, or additionally, you then can then create a ContentType with
# default fields, and a 'select' field, and a different 'templateselect' option.
#
#contenttype_xyz:
#    name: ContentType Xyz
#    fields:
#        <<: *field_defaults
#        selectfield:
#            type: select
#            values: [ none, foo, bar ]
#        template:
#            type: templateselect
#            filter: '*_xyz.twig'
#    taxonomy: [ tags ]
#    recordsperpage: 20]";}s:6:"errors";a:0:{}s:8:"children";a:3:{s:8:"contents";a:11:{s:2:"id";s:18:"file_edit_contents";s:4:"name";s:8:"contents";s:4:"type";s:8:"textarea";s:10:"type_class";s:55:"Symfony\Component\Form\Extension\Core\Type\TextareaType";s:12:"synchronized";s:4:"true";s:14:"passed_options";a:1:{s:11:"constraints";s:114:"[0 => Object(Bolt\Form\Validator\Constraints\Yaml), 1 => Object(Symfony\Component\Validator\Constraints\NotBlank)]";}s:16:"resolved_options";a:41:{s:6:"action";s:0:"";s:18:"allow_extra_fields";s:5:"false";s:4:"attr";s:2:"[]";s:15:"auto_initialize";s:4:"true";s:10:"block_name";s:4:"null";s:12:"by_reference";s:4:"true";s:18:"cascade_validation";s:5:"false";s:8:"compound";s:5:"false";s:11:"constraints";s:114:"[0 => Object(Bolt\Form\Validator\Constraints\Yaml), 1 => Object(Symfony\Component\Validator\Constraints\NotBlank)]";s:15:"csrf_field_name";s:6:"_token";s:12:"csrf_message";s:59:"The CSRF token is invalid. Please try to resubmit the form.";s:15:"csrf_protection";s:4:"true";s:13:"csrf_provider";s:56:"Object(Symfony\Component\Security\Csrf\CsrfTokenManager)";s:13:"csrf_token_id";s:4:"null";s:18:"csrf_token_manager";s:56:"Object(Symfony\Component\Security\Csrf\CsrfTokenManager)";s:10:"data_class";s:4:"null";s:8:"disabled";s:5:"false";s:10:"empty_data";s:15:"Object(Closure)";s:14:"error_bubbling";s:5:"false";s:13:"error_mapping";s:2:"[]";s:20:"extra_fields_message";s:42:"This form should not contain extra fields.";s:12:"inherit_data";s:5:"false";s:9:"intention";s:4:"null";s:15:"invalid_message";s:24:"This value is not valid.";s:26:"invalid_message_parameters";s:2:"[]";s:5:"label";s:4:"null";s:10:"label_attr";s:2:"[]";s:12:"label_format";s:4:"null";s:6:"mapped";s:4:"true";s:10:"max_length";s:4:"null";s:6:"method";s:4:"POST";s:7:"pattern";s:4:"null";s:21:"post_max_size_message";s:69:"The uploaded file was too large. Please try to upload a smaller file.";s:13:"property_path";s:4:"null";s:9:"read_only";s:5:"false";s:8:"required";s:4:"true";s:18:"translation_domain";s:4:"null";s:4:"trim";s:4:"true";s:23:"upload_max_size_message";s:15:"Object(Closure)";s:17:"validation_groups";s:4:"null";s:7:"virtual";s:4:"null";}s:12:"default_data";a:1:{s:4:"norm";s:12148:"# This file defines the contenttypes on the website. See the documentation for
# details: https://docs.bolt.cm/contenttypes/intro

# The Homepage contenttype is a singleton: There can be only one record of this
# contenttype.

homepage:
    name: Homepage
    singular_name: Homepage
    fields:
        title:
            type: text
            class: large
            group: content
            postfix: |
                The 'Homepage' can contain basic information about the website. This title will be
                shown on the homepage of the website, as the name implies. To change the
                <em><strong>name</strong></em> of the site, as is shown in the header, and the tab
                in the webbrowser, edit <code>sitename:</code> in the configuration file.
        image:
            type: image
            placeholder: https://source.unsplash.com/1920x640/?cityscape,landscape,nature/__random__
        teaser:
            type: html
            height: 150px
        content:
            type: html
            height: 300px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Homepage. This could either be an 'internal' link like <tt>page//about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        slug:
            type: slug
            uses: title
            group: meta
    viewless: true
    singleton: true
    default_status: published
    icon_many: "fa:home"
    icon_one: "fa:home"


# Pages can be used for the more 'static' pages on your site. This content-type
# has a 'templateselect' field, which allows you to override the record_template
# setting for an individual page.
# The taxonomy for this ContentType is defined as 'groups', which is a so-called
# "grouping taxonomy". This way you can easily group sets of pages that logically
# belong together. If your site has a 'services' section, in which you'd like to
# list the different types of services a company provides, you can group these
# together.

pages:
    name: Pages
    singular_name: Page
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        image:
            type: image
            placeholder: https://source.unsplash.com/1280x768/?business,workplace/__random__
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        template:
            type: templateselect
            filter: '*.twig'
    taxonomy: [ groups ]
    recordsperpage: 20


# Entries can be used for things like 'news' or 'blogpostings'. They have a
# 'teaser', which can be used for a short blurb on listing-pages, allowing
# visitors to click-through to the rest of the entry. It also has fields for an
# image and an optional video.
# A relation is defined to the pages ContentType. This way you can refer to a
# page from your news-item.
# This ContentType defines 'categories' and 'tags' as taxonomies, allowing the
# editor to use both to categorize a specific entry.
# The 'sort' is set to '-datepublish', which means that newer entries will be
# shown above older entries.

entries:
    name: Entries
    singular_name: Entry
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        image:
            type: image
            group: media
            placeholder: https://source.unsplash.com/1280x768/?business,workspace,interior/__random__
        video:
            type: video
    relations:
        pages:
          multiple: false
          order: title
          label: Select a page
    taxonomy: [ categories, tags ]
    record_template: entry.twig
    listing_template: listing.twig
    listing_records: 10
    default_status: published
    sort: -datepublish
    recordsperpage: 20


# The 'Showcases' is not particularly useful in most cases, but it does a good
# job of showcasing most of the available fieldtypes. Feel free to delete it, or
# copy some fields to your own ContentTypes.
# Since no templates are defined for this ContentType, the default record_template,
# listing_template, and related settings are used from config.yml

showcases:
    name: Showcases
    slug: showcases
    singular_name: Showcase
    singular_slug: showcase
    fields:
        title:
            type: text
            class: large
            required: true
            pattern: ".{2,255}" # see: http://html5pattern.com/
            error: "The Title field is required, and must contain at least 2 characters"
            group: Text
        slug:
            type: slug
            uses: [ title ]
        html:
            type: html
            height: 150px
        textarea:
            type: textarea
            postfix: "<p><em>This is a plain text area. the contents will not be processed.</em></p>"
        markdown:
            type: markdown
            postfix: "<p><em>This field gets parsed as <a href='https://help.github.com/articles/markdown-basics'>Markdown</a>, when rendered on the site.</em></p>"
        geolocation:
            type: geolocation
            group: Media
        embed:
            type: embed
        video:
            type: video
        image:
            type: image
            attrib: title # Note: retrieve this in your template with {{ record.values.image.title }}
            extensions: [ gif, jpg, png ]
            placeholder: https://source.unsplash.com/1280x768/?animal,koala,kitten,puppy,cute/__random__
        imagelist:
            type: imagelist
        file:
            type: file
            group: files
        filelist:
            type: filelist
        checkbox:
            type: checkbox
            label: "This is a checkbox"
            group: other
        datetime:
            type: datetime
            default: "2000-01-01"
            variant: inline
        date:
            type: date
            default: "first day of last month"
            variant: inline
        integerfield:
            type: integer
            index: true
        floatfield:
            type: float
        selectfield:
            type: select
            values: [ foo, bar, baz ]
        multiselect:
            type: select
            values: [ A-tuin, Donatello, Rafael, Leonardo, Michelangelo, Koopa, Squirtle ]
            multiple: true
            postfix: "Select your favourite turtle(s)."
        selectentry:
            type: select
            values: entries/id,title
            postfix: "Select an entry"
            autocomplete: true
            sort: title
        repeater:
            type: repeater
            group: repeater
            limit: 3
            prefix: "<p>This allows you to create multiple sets of fields. Use the add button at the bottom to create a new empty set.</p>"
            fields:
                repeattitle:
                    type: text
                repeatimage:
                    type: image
                    extensions: [ gif, jpg, png ]
                repeatcontent:
                    type: html
    relations:
        entries:
            multiple: false
            label: "Choose an entry"
            order: -id
            format: "{{ item.title|escape }} (№ {{ item.id }})"
            postfix: "By selecting an Entry, you're creating a bi-directional relationship to that Entry."
        pages:
            multiple: true
            order: title
            label: Select zero or more pages
    taxonomy: [ categories, tags ]
    show_on_dashboard: true
    default_status: published
    searchable: true
    icon_many: "fa:gift"
    icon_one: "fa:gift"


# The 'Blocks' ContentType is a so-called 'resource ContentType'. This means
# that it can be used to manage smaller pieces of content, like the 'about us'
# text, an 'our address' in the footer, or similar short blurbs of text.
# For more info, see: https://docs.bolt.cm/howto/resource-contenttype

blocks:
    name: Blocks
    singular_name: Block
    fields:
        title:
            type: text
            class: large
            group: "Block"
        slug:
            type: slug
            uses: [ title ]
        content:
            type: html
            height: 150px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Block. This could either be an 'internal' link like <tt>page/about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        image:
            type: image
            attrib: title
            extensions: [ gif, jpg, png ]
    show_on_dashboard: true
    viewless: true
    default_status: published
    searchable: false
    icon_many: "fa:cubes"
    icon_one: "fa:cube"

# Possible field types:
#
# text - varchar(256) - input type text.
# integer - integer - Input field for integer numbers.
# float - double - Input field for floating numbers, stored as 'Double'.
# geolocation - text (65kb) - Input field for geolocation. Enter an address, and the location is geocoded to latitude/longitude coordinates
# imagelist - text (65kb) - Input type for imagelists. Add multiple images with a description. Useful for image sliders, galleries, etcetera.
# image - varchar(256) - image select/upload widget, stored as filename.
# file - varchar(256) - file select/upload widget, stored as filename.
# filelist - text (65kb) - Input type for a list of files. Including a description.
# video - varchar(256) - Video embed widget, stored as filename.
# html - text (65kb) - wysiwyg element.
# textarea - varchar(32768) - Simple, plain < textarea > field.
# markdown - varchar(32768) - Simple, plain < textarea > field, which is parsed as Markdown text.
# datetime - datetime - date and time selector widget.
# date - datetime - date selector widget.
# select - varchar(256) - select with predefined values
# templateselect - varchar(256) - select with template filenames
# checkbox - integer - checkbox-field which is 1 (checked) or 0 (unchecked)

# Using YAML repeated nodes
#
# YAML allows the defining of "repeated nodes". These allow you to define a 'node'
# with a 'key: &name' and referenced later with '<<: *name'
#
# Bolt allows you to define this with the special entry of '__nodes:' that itself
# won't create a ContentType, but will allow you to use it in actual ContentTypes
# to prevent repeating yourself.
#
# To achieve this, first create a key '__nodes:'
#__nodes:
#    field_defaults: &field_defaults
#        title:
#            type: text
#            class: large
#            group: main
#        slug:
#            type: slug
#            uses: title
#    template_defaults: &template_defaults
#        template:
#            type: templateselect
#            filter: '*.twig'
#            group: meta
#
# Then, as an example, you could create a ContentType with default fields, with
# an additional 'image' field.
#
#contenttype_abc:
#    name: ContentType Abc
#    fields:
#        <<: *field_defaults
#        image:
#            type: image
#            attrib: title
#            extensions: [ gif, jpg, png ]
#        <<: *template_defaults
#    taxonomy: [ chapters ]
#    recordsperpage: 10
#
# Alternatively, or additionally, you then can then create a ContentType with
# default fields, and a 'select' field, and a different 'templateselect' option.
#
#contenttype_xyz:
#    name: ContentType Xyz
#    fields:
#        <<: *field_defaults
#        selectfield:
#            type: select
#            values: [ none, foo, bar ]
#        template:
#            type: templateselect
#            filter: '*_xyz.twig'
#    taxonomy: [ tags ]
#    recordsperpage: 20
";}s:14:"submitted_data";a:1:{s:4:"norm";s:12528:"# This file defines the contenttypes on the website. See the documentation for
# details: https://docs.bolt.cm/contenttypes/intro

# The Homepage contenttype is a singleton: There can be only one record of this
# contenttype.

homepage:
    name: Homepage
    singular_name: Homepage
    fields:
        title:
            type: text
            class: large
            group: content
            postfix: |
                The 'Homepage' can contain basic information about the website. This title will be
                shown on the homepage of the website, as the name implies. To change the
                <em><strong>name</strong></em> of the site, as is shown in the header, and the tab
                in the webbrowser, edit <code>sitename:</code> in the configuration file.
        image:
            type: image
            placeholder: https://source.unsplash.com/1920x640/?cityscape,landscape,nature/__random__
        teaser:
            type: html
            height: 150px
        content:
            type: html
            height: 300px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Homepage. This could either be an 'internal' link like <tt>page//about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        slug:
            type: slug
            uses: title
            group: meta
    viewless: true
    singleton: true
    default_status: published
    icon_many: "fa:home"
    icon_one: "fa:home"


# Pages can be used for the more 'static' pages on your site. This content-type
# has a 'templateselect' field, which allows you to override the record_template
# setting for an individual page.
# The taxonomy for this ContentType is defined as 'groups', which is a so-called
# "grouping taxonomy". This way you can easily group sets of pages that logically
# belong together. If your site has a 'services' section, in which you'd like to
# list the different types of services a company provides, you can group these
# together.

pages:
    name: Pages
    singular_name: Page
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        image:
            type: image
            placeholder: https://source.unsplash.com/1280x768/?business,workplace/__random__
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        template:
            type: templateselect
            filter: '*.twig'
    default_status: published
    taxonomy: [ groups ]
    recordsperpage: 20


# Entries can be used for things like 'news' or 'blogpostings'. They have a
# 'teaser', which can be used for a short blurb on listing-pages, allowing
# visitors to click-through to the rest of the entry. It also has fields for an
# image and an optional video.
# A relation is defined to the pages ContentType. This way you can refer to a
# page from your news-item.
# This ContentType defines 'categories' and 'tags' as taxonomies, allowing the
# editor to use both to categorize a specific entry.
# The 'sort' is set to '-datepublish', which means that newer entries will be
# shown above older entries.

entries:
    name: Entries
    singular_name: Entry
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        image:
            type: image
            group: media
            placeholder: https://source.unsplash.com/1280x768/?business,workspace,interior/__random__
        video:
            type: video
    relations:
        pages:
          multiple: false
          order: title
          label: Select a page
    taxonomy: [ categories, tags ]
    record_template: entry.twig
    listing_template: listing.twig
    listing_records: 10
    default_status: published
    sort: -datepublish
    recordsperpage: 20


# The 'Showcases' is not particularly useful in most cases, but it does a good
# job of showcasing most of the available fieldtypes. Feel free to delete it, or
# copy some fields to your own ContentTypes.
# Since no templates are defined for this ContentType, the default record_template,
# listing_template, and related settings are used from config.yml

showcases:
    name: Showcases
    slug: showcases
    singular_name: Showcase
    singular_slug: showcase
    fields:
        title:
            type: text
            class: large
            required: true
            pattern: ".{2,255}" # see: http://html5pattern.com/
            error: "The Title field is required, and must contain at least 2 characters"
            group: Text
        slug:
            type: slug
            uses: [ title ]
        html:
            type: html
            height: 150px
        textarea:
            type: textarea
            postfix: "<p><em>This is a plain text area. the contents will not be processed.</em></p>"
        markdown:
            type: markdown
            postfix: "<p><em>This field gets parsed as <a href='https://help.github.com/articles/markdown-basics'>Markdown</a>, when rendered on the site.</em></p>"
        geolocation:
            type: geolocation
            group: Media
        embed:
            type: embed
        video:
            type: video
        image:
            type: image
            attrib: title # Note: retrieve this in your template with {{ record.values.image.title }}
            extensions: [ gif, jpg, png ]
            placeholder: https://source.unsplash.com/1280x768/?animal,koala,kitten,puppy,cute/__random__
        imagelist:
            type: imagelist
        file:
            type: file
            group: files
        filelist:
            type: filelist
        checkbox:
            type: checkbox
            label: "This is a checkbox"
            group: other
        datetime:
            type: datetime
            default: "2000-01-01"
            variant: inline
        date:
            type: date
            default: "first day of last month"
            variant: inline
        integerfield:
            type: integer
            index: true
        floatfield:
            type: float
        selectfield:
            type: select
            values: [ foo, bar, baz ]
        multiselect:
            type: select
            values: [ A-tuin, Donatello, Rafael, Leonardo, Michelangelo, Koopa, Squirtle ]
            multiple: true
            postfix: "Select your favourite turtle(s)."
        selectentry:
            type: select
            values: entries/id,title
            postfix: "Select an entry"
            autocomplete: true
            sort: title
        repeater:
            type: repeater
            group: repeater
            limit: 3
            prefix: "<p>This allows you to create multiple sets of fields. Use the add button at the bottom to create a new empty set.</p>"
            fields:
                repeattitle:
                    type: text
                repeatimage:
                    type: image
                    extensions: [ gif, jpg, png ]
                repeatcontent:
                    type: html
    relations:
        entries:
            multiple: false
            label: "Choose an entry"
            order: -id
            format: "{{ item.title|escape }} (№ {{ item.id }})"
            postfix: "By selecting an Entry, you're creating a bi-directional relationship to that Entry."
        pages:
            multiple: true
            order: title
            label: Select zero or more pages
    taxonomy: [ categories, tags ]
    show_on_dashboard: true
    default_status: published
    searchable: true
    icon_many: "fa:gift"
    icon_one: "fa:gift"


# The 'Blocks' ContentType is a so-called 'resource ContentType'. This means
# that it can be used to manage smaller pieces of content, like the 'about us'
# text, an 'our address' in the footer, or similar short blurbs of text.
# For more info, see: https://docs.bolt.cm/howto/resource-contenttype

blocks:
    name: Blocks
    singular_name: Block
    fields:
        title:
            type: text
            class: large
            group: "Block"
        slug:
            type: slug
            uses: [ title ]
        content:
            type: html
            height: 150px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Block. This could either be an 'internal' link like <tt>page/about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        image:
            type: image
            attrib: title
            extensions: [ gif, jpg, png ]
    show_on_dashboard: true
    viewless: true
    default_status: published
    searchable: false
    icon_many: "fa:cubes"
    icon_one: "fa:cube"

# Possible field types:
#
# text - varchar(256) - input type text.
# integer - integer - Input field for integer numbers.
# float - double - Input field for floating numbers, stored as 'Double'.
# geolocation - text (65kb) - Input field for geolocation. Enter an address, and the location is geocoded to latitude/longitude coordinates
# imagelist - text (65kb) - Input type for imagelists. Add multiple images with a description. Useful for image sliders, galleries, etcetera.
# image - varchar(256) - image select/upload widget, stored as filename.
# file - varchar(256) - file select/upload widget, stored as filename.
# filelist - text (65kb) - Input type for a list of files. Including a description.
# video - varchar(256) - Video embed widget, stored as filename.
# html - text (65kb) - wysiwyg element.
# textarea - varchar(32768) - Simple, plain < textarea > field.
# markdown - varchar(32768) - Simple, plain < textarea > field, which is parsed as Markdown text.
# datetime - datetime - date and time selector widget.
# date - datetime - date selector widget.
# select - varchar(256) - select with predefined values
# templateselect - varchar(256) - select with template filenames
# checkbox - integer - checkbox-field which is 1 (checked) or 0 (unchecked)

# Using YAML repeated nodes
#
# YAML allows the defining of "repeated nodes". These allow you to define a 'node'
# with a 'key: &name' and referenced later with '<<: *name'
#
# Bolt allows you to define this with the special entry of '__nodes:' that itself
# won't create a ContentType, but will allow you to use it in actual ContentTypes
# to prevent repeating yourself.
#
# To achieve this, first create a key '__nodes:'
#__nodes:
#    field_defaults: &field_defaults
#        title:
#            type: text
#            class: large
#            group: main
#        slug:
#            type: slug
#            uses: title
#    template_defaults: &template_defaults
#        template:
#            type: templateselect
#            filter: '*.twig'
#            group: meta
#
# Then, as an example, you could create a ContentType with default fields, with
# an additional 'image' field.
#
#contenttype_abc:
#    name: ContentType Abc
#    fields:
#        <<: *field_defaults
#        image:
#            type: image
#            attrib: title
#            extensions: [ gif, jpg, png ]
#        <<: *template_defaults
#    taxonomy: [ chapters ]
#    recordsperpage: 10
#
# Alternatively, or additionally, you then can then create a ContentType with
# default fields, and a 'select' field, and a different 'templateselect' option.
#
#contenttype_xyz:
#    name: ContentType Xyz
#    fields:
#        <<: *field_defaults
#        selectfield:
#            type: select
#            values: [ none, foo, bar ]
#        template:
#            type: templateselect
#            filter: '*_xyz.twig'
#    taxonomy: [ tags ]
#    recordsperpage: 20";}s:6:"errors";a:0:{}s:8:"children";a:0:{}}s:6:"revert";a:11:{s:2:"id";s:16:"file_edit_revert";s:4:"name";s:6:"revert";s:4:"type";s:6:"submit";s:10:"type_class";s:53:"Symfony\Component\Form\Extension\Core\Type\SubmitType";s:12:"synchronized";s:4:"true";s:14:"passed_options";a:2:{s:8:"disabled";s:5:"false";s:5:"label";s:21:"Änderungen verwerfen";}s:16:"resolved_options";a:8:{s:4:"attr";s:2:"[]";s:15:"auto_initialize";s:5:"false";s:10:"block_name";s:4:"null";s:8:"disabled";s:5:"false";s:5:"label";s:21:"Änderungen verwerfen";s:12:"label_format";s:4:"null";s:18:"translation_domain";s:4:"null";s:17:"validation_groups";s:4:"null";}s:12:"default_data";a:1:{s:4:"norm";s:4:"null";}s:14:"submitted_data";a:1:{s:4:"norm";s:4:"null";}s:6:"errors";a:0:{}s:8:"children";a:0:{}}s:4:"save";a:11:{s:2:"id";s:14:"file_edit_save";s:4:"name";s:4:"save";s:4:"type";s:6:"submit";s:10:"type_class";s:53:"Symfony\Component\Form\Extension\Core\Type\SubmitType";s:12:"synchronized";s:4:"true";s:14:"passed_options";a:2:{s:8:"disabled";s:5:"false";s:5:"label";s:9:"Speichern";}s:16:"resolved_options";a:8:{s:4:"attr";s:2:"[]";s:15:"auto_initialize";s:5:"false";s:10:"block_name";s:4:"null";s:8:"disabled";s:5:"false";s:5:"label";s:9:"Speichern";s:12:"label_format";s:4:"null";s:18:"translation_domain";s:4:"null";s:17:"validation_groups";s:4:"null";}s:12:"default_data";a:1:{s:4:"norm";s:4:"null";}s:14:"submitted_data";a:1:{s:4:"norm";s:4:"null";}s:6:"errors";a:0:{}s:8:"children";a:0:{}}}}}s:13:"forms_by_hash";a:4:{s:32:"0000000024d18e770000000002c8a870";R:1617;s:32:"0000000024d18e740000000002c8a870";R:1680;s:32:"0000000024d18e690000000002c8a870";R:1736;s:32:"0000000024d18e6f0000000002c8a870";R:1760;}s:9:"nb_errors";i:0;}}s:4:"twig";C:51:"Symfony\Bridge\Twig\DataCollector\TwigDataCollector":214:{a:1:{s:7:"profile";s:185:"C:21:"Twig_Profiler_Profile":150:{a:6:{i:0;s:4:"main";i:1;s:4:"main";i:2;s:4:"ROOT";i:3;a:3:{s:2:"wt";d:1526934386.6905611;s:2:"mu";i:3578568;s:3:"pmu";i:3582200;}i:4;a:0:{}i:5;a:0:{}}}";}}s:4:"bolt";C:31:"Bolt\Profiler\BoltDataCollector":207:{a:6:{s:7:"version";s:5:"3.5.0";s:6:"payoff";s:39:"Sophisticated, lightweight & simple CMS";s:13:"dashboardlink";s:34:"<a href="/bolt/bolt">Dashboard</a>";s:8:"branding";N;s:8:"editlink";N;s:9:"edittitle";N;}}s:2:"db";C:35:"Bolt\Profiler\DatabaseDataCollector":3863:{a:1:{s:7:"queries";a:16:{i:0;a:4:{s:3:"sql";s:36:"SELECT users.* FROM bolt_users users";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.00010800361633300781;}i:1;a:4:{s:3:"sql";s:223:"SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.00018286705017089844;}i:2;a:4:{s:3:"sql";s:137:"SELECT sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type = 'table' AND name = 'bolt_authtoken'";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.00013613700866699219;}i:3;a:4:{s:3:"sql";s:134:"SELECT sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type = 'table' AND name = 'bolt_blocks'";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:7.9870223999023438E-5;}i:4;a:4:{s:3:"sql";s:132:"SELECT sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type = 'table' AND name = 'bolt_cron'";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:7.2002410888671875E-5;}i:5;a:4:{s:3:"sql";s:135:"SELECT sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type = 'table' AND name = 'bolt_entries'";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.00010609626770019531;}i:6;a:4:{s:3:"sql";s:139:"SELECT sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type = 'table' AND name = 'bolt_field_value'";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.0001239776611328125;}i:7;a:4:{s:3:"sql";s:136:"SELECT sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type = 'table' AND name = 'bolt_homepage'";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.00011706352233886719;}i:8;a:4:{s:3:"sql";s:138:"SELECT sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type = 'table' AND name = 'bolt_log_change'";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.00011014938354492188;}i:9;a:4:{s:3:"sql";s:138:"SELECT sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type = 'table' AND name = 'bolt_log_system'";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.00010704994201660156;}i:10;a:4:{s:3:"sql";s:133:"SELECT sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type = 'table' AND name = 'bolt_pages'";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.00015997886657714844;}i:11;a:4:{s:3:"sql";s:137:"SELECT sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type = 'table' AND name = 'bolt_relations'";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.000125885009765625;}i:12;a:4:{s:3:"sql";s:137:"SELECT sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type = 'table' AND name = 'bolt_showcases'";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.00015592575073242188;}i:13;a:4:{s:3:"sql";s:136:"SELECT sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type = 'table' AND name = 'bolt_taxonomy'";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.00024104118347167969;}i:14;a:4:{s:3:"sql";s:133:"SELECT sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type = 'table' AND name = 'bolt_users'";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.00017309188842773438;}i:15;a:4:{s:3:"sql";s:53:"SELECT COUNT(users.id) as count FROM bolt_users users";s:6:"params";a:0:{}s:5:"types";a:0:{}s:11:"executionMS";d:0.00015306472778320312;}}}}}s:2:"ip";s:14:"192.168.178.37";s:6:"method";s:4:"POST";s:3:"url";s:97:"http://bolt.independent-tutorials.local/bolt/bolt/file/edit/config/contenttypes.yml?returnto=ajax";s:4:"time";i:1526934386;}